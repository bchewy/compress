/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/index"],{

/***/ "(pages-dir-browser)/./components/UniversalCompressor.js":
/*!*******************************************!*\
  !*** ./components/UniversalCompressor.js ***!
  \*******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ UniversalCompressor)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/head */ \"(pages-dir-browser)/./node_modules/next/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_script__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/script */ \"(pages-dir-browser)/./node_modules/next/script.js\");\n/* harmony import */ var next_script__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_script__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _utils_fileTypes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/fileTypes */ \"(pages-dir-browser)/./utils/fileTypes.js\");\n/* harmony import */ var _utils_compressionEngine__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/compressionEngine */ \"(pages-dir-browser)/./utils/compressionEngine.js\");\n/* harmony import */ var _utils_pdfUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/pdfUtils */ \"(pages-dir-browser)/./utils/pdfUtils.js\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\nfunction UniversalCompressor() {\n    var _getFileTypeInfo;\n    _s();\n    const [files, setFiles] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [processedFiles, setProcessedFiles] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [isProcessing, setIsProcessing] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [processingProgress, setProcessingProgress] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [currentProcessingFile, setCurrentProcessingFile] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    // Compression options for different file types\n    const [pdfOptions, setPdfOptions] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        quality: 50,\n        dpi: 150\n    });\n    const [imageOptions, setImageOptions] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        quality: 0.8,\n        format: 'jpeg',\n        maxWidth: null,\n        maxHeight: null\n    });\n    const [textOptions, setTextOptions] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        method: 'optimize',\n        removeComments: true,\n        removeExtraWhitespace: true,\n        removeEmptyLines: true\n    });\n    const [selectedTab, setSelectedTab] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('all');\n    const [showAdvancedOptions, setShowAdvancedOptions] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const fileInputRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const dropAreaRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const handleDragOver = (e)=>{\n        var _dropAreaRef_current;\n        e.preventDefault();\n        (_dropAreaRef_current = dropAreaRef.current) === null || _dropAreaRef_current === void 0 ? void 0 : _dropAreaRef_current.classList.add('highlight');\n    };\n    const handleDragLeave = ()=>{\n        var _dropAreaRef_current;\n        (_dropAreaRef_current = dropAreaRef.current) === null || _dropAreaRef_current === void 0 ? void 0 : _dropAreaRef_current.classList.remove('highlight');\n    };\n    const handleDrop = (e)=>{\n        var _dropAreaRef_current;\n        e.preventDefault();\n        (_dropAreaRef_current = dropAreaRef.current) === null || _dropAreaRef_current === void 0 ? void 0 : _dropAreaRef_current.classList.remove('highlight');\n        const droppedFiles = e.dataTransfer.files;\n        handleFiles(droppedFiles);\n    };\n    const handleFileSelect = (e)=>{\n        handleFiles(e.target.files);\n    };\n    const handleFiles = (newFiles)=>{\n        const supportedFiles = Array.from(newFiles).filter((file)=>{\n            if (!(0,_utils_fileTypes__WEBPACK_IMPORTED_MODULE_4__.isFileSupported)(file)) {\n                console.warn(\"Unsupported file type: \".concat(file.name));\n                return false;\n            }\n            return true;\n        });\n        if (supportedFiles.length === 0) {\n            alert('No supported files found. Please select PDF, image, text, or document files.');\n            return;\n        }\n        if (supportedFiles.length !== newFiles.length) {\n            alert(\"\".concat(newFiles.length - supportedFiles.length, \" unsupported files were excluded.\"));\n        }\n        setFiles((prev)=>[\n                ...prev,\n                ...supportedFiles\n            ]);\n    };\n    const removeFile = (index)=>{\n        setFiles((prev)=>prev.filter((_, i)=>i !== index));\n    };\n    const processFiles = async ()=>{\n        if (files.length === 0) {\n            alert('Please select at least one file to compress.');\n            return;\n        }\n        setIsProcessing(true);\n        setProcessedFiles([]);\n        setProcessingProgress(0);\n        try {\n            const compressionOptions = {\n                [_utils_fileTypes__WEBPACK_IMPORTED_MODULE_4__.FILE_TYPES.PDF]: pdfOptions,\n                [_utils_fileTypes__WEBPACK_IMPORTED_MODULE_4__.FILE_TYPES.IMAGE]: imageOptions,\n                [_utils_fileTypes__WEBPACK_IMPORTED_MODULE_4__.FILE_TYPES.TEXT]: textOptions\n            };\n            const progressCallback = (progress, fileIndex, fileName, fileType)=>{\n                setProcessingProgress(progress);\n                setCurrentProcessingFile(fileName);\n            };\n            const results = await _utils_compressionEngine__WEBPACK_IMPORTED_MODULE_5__.compressionEngine.compressFiles(files, compressionOptions, progressCallback);\n            setProcessedFiles(results);\n        } catch (error) {\n            console.error('Error processing files:', error);\n            alert('Error processing files: ' + error.message);\n        }\n        setIsProcessing(false);\n        setProcessingProgress(0);\n        setCurrentProcessingFile('');\n    };\n    const getFilesByType = (fileType)=>{\n        return files.filter((file)=>(0,_utils_fileTypes__WEBPACK_IMPORTED_MODULE_4__.detectFileType)(file) === fileType);\n    };\n    const getProcessedFilesByType = (fileType)=>{\n        return processedFiles.filter((result)=>result.fileType === fileType);\n    };\n    const renderFileList = (filesToRender, title)=>{\n        if (filesToRender.length === 0) return null;\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"file-type-section\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h4\", {\n                    children: [\n                        title,\n                        \" (\",\n                        filesToRender.length,\n                        \")\"\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                    lineNumber: 141,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"file-list\",\n                    children: filesToRender.map((file, index)=>{\n                        const fileType = (0,_utils_fileTypes__WEBPACK_IMPORTED_MODULE_4__.detectFileType)(file);\n                        const fileInfo = (0,_utils_fileTypes__WEBPACK_IMPORTED_MODULE_4__.getFileTypeInfo)(fileType);\n                        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"file-item\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"file-icon\",\n                                    children: (fileInfo === null || fileInfo === void 0 ? void 0 : fileInfo.icon) || '📄'\n                                }, void 0, false, {\n                                    fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                    lineNumber: 149,\n                                    columnNumber: 17\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"file-details\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"file-name\",\n                                            children: file.name\n                                        }, void 0, false, {\n                                            fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                            lineNumber: 151,\n                                            columnNumber: 19\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"file-size\",\n                                            children: (0,_utils_pdfUtils__WEBPACK_IMPORTED_MODULE_6__.formatFileSize)(file.size)\n                                        }, void 0, false, {\n                                            fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                            lineNumber: 152,\n                                            columnNumber: 19\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"file-type\",\n                                            children: (fileInfo === null || fileInfo === void 0 ? void 0 : fileInfo.description) || 'Unknown'\n                                        }, void 0, false, {\n                                            fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                            lineNumber: 153,\n                                            columnNumber: 19\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                    lineNumber: 150,\n                                    columnNumber: 17\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    className: \"remove-btn\",\n                                    onClick: ()=>removeFile(files.indexOf(file)),\n                                    children: \"\\xd7\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                    lineNumber: 155,\n                                    columnNumber: 17\n                                }, this)\n                            ]\n                        }, index, true, {\n                            fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                            lineNumber: 148,\n                            columnNumber: 15\n                        }, this);\n                    })\n                }, void 0, false, {\n                    fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                    lineNumber: 142,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n            lineNumber: 140,\n            columnNumber: 7\n        }, this);\n    };\n    const renderCompressionOptions = ()=>{\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"compression-options\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"options-header\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                            children: \"Compression Options\"\n                        }, void 0, false, {\n                            fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                            lineNumber: 168,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            className: \"toggle-advanced\",\n                            onClick: ()=>setShowAdvancedOptions(!showAdvancedOptions),\n                            children: [\n                                showAdvancedOptions ? 'Simple' : 'Advanced',\n                                \" Options\"\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                            lineNumber: 169,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                    lineNumber: 167,\n                    columnNumber: 9\n                }, this),\n                getFilesByType(_utils_fileTypes__WEBPACK_IMPORTED_MODULE_4__.FILE_TYPES.PDF).length > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"file-type-options\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h4\", {\n                            children: \"\\uD83D\\uDCC4 PDF Options\"\n                        }, void 0, false, {\n                            fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                            lineNumber: 180,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"option\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                    children: [\n                                        \"Quality: \",\n                                        pdfOptions.quality,\n                                        \"%\"\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                    lineNumber: 182,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    type: \"range\",\n                                    min: \"1\",\n                                    max: \"100\",\n                                    value: pdfOptions.quality,\n                                    onChange: (e)=>setPdfOptions((prev)=>({\n                                                ...prev,\n                                                quality: parseInt(e.target.value)\n                                            }))\n                                }, void 0, false, {\n                                    fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                    lineNumber: 183,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                            lineNumber: 181,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"option\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                    children: [\n                                        \"DPI: \",\n                                        pdfOptions.dpi\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                    lineNumber: 192,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    type: \"range\",\n                                    min: \"72\",\n                                    max: \"300\",\n                                    value: pdfOptions.dpi,\n                                    onChange: (e)=>setPdfOptions((prev)=>({\n                                                ...prev,\n                                                dpi: parseInt(e.target.value)\n                                            }))\n                                }, void 0, false, {\n                                    fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                    lineNumber: 193,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                            lineNumber: 191,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                    lineNumber: 179,\n                    columnNumber: 11\n                }, this),\n                getFilesByType(_utils_fileTypes__WEBPACK_IMPORTED_MODULE_4__.FILE_TYPES.IMAGE).length > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"file-type-options\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h4\", {\n                            children: \"\\uD83D\\uDDBC️ Image Options\"\n                        }, void 0, false, {\n                            fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                            lineNumber: 207,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"option\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                    children: [\n                                        \"Quality: \",\n                                        Math.round(imageOptions.quality * 100),\n                                        \"%\"\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                    lineNumber: 209,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    type: \"range\",\n                                    min: \"0.1\",\n                                    max: \"1\",\n                                    step: \"0.1\",\n                                    value: imageOptions.quality,\n                                    onChange: (e)=>setImageOptions((prev)=>({\n                                                ...prev,\n                                                quality: parseFloat(e.target.value)\n                                            }))\n                                }, void 0, false, {\n                                    fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                    lineNumber: 210,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                            lineNumber: 208,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"option\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                    children: \"Format:\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                    lineNumber: 220,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                                    value: imageOptions.format,\n                                    onChange: (e)=>setImageOptions((prev)=>({\n                                                ...prev,\n                                                format: e.target.value\n                                            })),\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                            value: \"jpeg\",\n                                            children: \"JPEG\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                            lineNumber: 225,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                            value: \"png\",\n                                            children: \"PNG\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                            lineNumber: 226,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                            value: \"webp\",\n                                            children: \"WebP\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                            lineNumber: 227,\n                                            columnNumber: 17\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                    lineNumber: 221,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                            lineNumber: 219,\n                            columnNumber: 13\n                        }, this),\n                        showAdvancedOptions && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"option\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                            children: \"Max Width (px):\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                            lineNumber: 233,\n                                            columnNumber: 19\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                            type: \"number\",\n                                            placeholder: \"Auto\",\n                                            value: imageOptions.maxWidth || '',\n                                            onChange: (e)=>setImageOptions((prev)=>({\n                                                        ...prev,\n                                                        maxWidth: e.target.value ? parseInt(e.target.value) : null\n                                                    }))\n                                        }, void 0, false, {\n                                            fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                            lineNumber: 234,\n                                            columnNumber: 19\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                    lineNumber: 232,\n                                    columnNumber: 17\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"option\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                            children: \"Max Height (px):\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                            lineNumber: 245,\n                                            columnNumber: 19\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                            type: \"number\",\n                                            placeholder: \"Auto\",\n                                            value: imageOptions.maxHeight || '',\n                                            onChange: (e)=>setImageOptions((prev)=>({\n                                                        ...prev,\n                                                        maxHeight: e.target.value ? parseInt(e.target.value) : null\n                                                    }))\n                                        }, void 0, false, {\n                                            fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                            lineNumber: 246,\n                                            columnNumber: 19\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                    lineNumber: 244,\n                                    columnNumber: 17\n                                }, this)\n                            ]\n                        }, void 0, true)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                    lineNumber: 206,\n                    columnNumber: 11\n                }, this),\n                getFilesByType(_utils_fileTypes__WEBPACK_IMPORTED_MODULE_4__.FILE_TYPES.TEXT).length > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"file-type-options\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h4\", {\n                            children: \"\\uD83D\\uDCDD Text Options\"\n                        }, void 0, false, {\n                            fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                            lineNumber: 264,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"option\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                    children: \"Method:\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                    lineNumber: 266,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                                    value: textOptions.method,\n                                    onChange: (e)=>setTextOptions((prev)=>({\n                                                ...prev,\n                                                method: e.target.value\n                                            })),\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                            value: \"optimize\",\n                                            children: \"Optimize\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                            lineNumber: 271,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                            value: \"minify\",\n                                            children: \"Minify\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                            lineNumber: 272,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                            value: \"gzip\",\n                                            children: \"GZIP\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                            lineNumber: 273,\n                                            columnNumber: 17\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                    lineNumber: 267,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                            lineNumber: 265,\n                            columnNumber: 13\n                        }, this),\n                        showAdvancedOptions && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"option-checkbox\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                            type: \"checkbox\",\n                                            checked: textOptions.removeComments,\n                                            onChange: (e)=>setTextOptions((prev)=>({\n                                                        ...prev,\n                                                        removeComments: e.target.checked\n                                                    }))\n                                        }, void 0, false, {\n                                            fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                            lineNumber: 279,\n                                            columnNumber: 19\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                            children: \"Remove Comments\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                            lineNumber: 284,\n                                            columnNumber: 19\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                    lineNumber: 278,\n                                    columnNumber: 17\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"option-checkbox\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                            type: \"checkbox\",\n                                            checked: textOptions.removeExtraWhitespace,\n                                            onChange: (e)=>setTextOptions((prev)=>({\n                                                        ...prev,\n                                                        removeExtraWhitespace: e.target.checked\n                                                    }))\n                                        }, void 0, false, {\n                                            fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                            lineNumber: 287,\n                                            columnNumber: 19\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                            children: \"Remove Extra Whitespace\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                            lineNumber: 292,\n                                            columnNumber: 19\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                    lineNumber: 286,\n                                    columnNumber: 17\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"option-checkbox\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                            type: \"checkbox\",\n                                            checked: textOptions.removeEmptyLines,\n                                            onChange: (e)=>setTextOptions((prev)=>({\n                                                        ...prev,\n                                                        removeEmptyLines: e.target.checked\n                                                    }))\n                                        }, void 0, false, {\n                                            fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                            lineNumber: 295,\n                                            columnNumber: 19\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                            children: \"Remove Empty Lines\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                            lineNumber: 300,\n                                            columnNumber: 19\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                    lineNumber: 294,\n                                    columnNumber: 17\n                                }, this)\n                            ]\n                        }, void 0, true)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                    lineNumber: 263,\n                    columnNumber: 11\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n            lineNumber: 166,\n            columnNumber: 7\n        }, this);\n    };\n    const renderResults = ()=>{\n        if (processedFiles.length === 0) return null;\n        const successfulResults = processedFiles.filter((result)=>result.success);\n        const failedResults = processedFiles.filter((result)=>!result.success);\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"results\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                    children: [\n                        \"Results (\",\n                        processedFiles.length,\n                        \" files processed)\"\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                    lineNumber: 318,\n                    columnNumber: 9\n                }, this),\n                successfulResults.length > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"successful-results\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h4\", {\n                            children: [\n                                \"✅ Successfully Compressed (\",\n                                successfulResults.length,\n                                \")\"\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                            lineNumber: 322,\n                            columnNumber: 13\n                        }, this),\n                        successfulResults.map((result, index)=>{\n                            const fileInfo = (0,_utils_fileTypes__WEBPACK_IMPORTED_MODULE_4__.getFileTypeInfo)(result.fileType);\n                            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"result-item\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"result-header\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"file-icon\",\n                                                children: (fileInfo === null || fileInfo === void 0 ? void 0 : fileInfo.icon) || '📄'\n                                            }, void 0, false, {\n                                                fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                                lineNumber: 329,\n                                                columnNumber: 21\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"file-name\",\n                                                children: result.original.name\n                                            }, void 0, false, {\n                                                fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                                lineNumber: 330,\n                                                columnNumber: 21\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                        lineNumber: 328,\n                                        columnNumber: 19\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"result-details\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"size-comparison\",\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                        children: [\n                                                            \"Original: \",\n                                                            (0,_utils_pdfUtils__WEBPACK_IMPORTED_MODULE_6__.formatFileSize)(result.original.size)\n                                                        ]\n                                                    }, void 0, true, {\n                                                        fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                                        lineNumber: 334,\n                                                        columnNumber: 23\n                                                    }, this),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                        children: \" → \"\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                                        lineNumber: 335,\n                                                        columnNumber: 23\n                                                    }, this),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                        children: [\n                                                            \"Compressed: \",\n                                                            (0,_utils_pdfUtils__WEBPACK_IMPORTED_MODULE_6__.formatFileSize)(result.compressed.size)\n                                                        ]\n                                                    }, void 0, true, {\n                                                        fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                                        lineNumber: 336,\n                                                        columnNumber: 23\n                                                    }, this),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                        className: \"reduction\",\n                                                        children: [\n                                                            \" (\",\n                                                            result.reduction,\n                                                            \"% smaller)\"\n                                                        ]\n                                                    }, void 0, true, {\n                                                        fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                                        lineNumber: 337,\n                                                        columnNumber: 23\n                                                    }, this)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                                lineNumber: 333,\n                                                columnNumber: 21\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"actions\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                    onClick: ()=>(0,_utils_pdfUtils__WEBPACK_IMPORTED_MODULE_6__.downloadFile)(result.compressed),\n                                                    children: \"Download\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                                    lineNumber: 340,\n                                                    columnNumber: 23\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                                lineNumber: 339,\n                                                columnNumber: 21\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                        lineNumber: 332,\n                                        columnNumber: 19\n                                    }, this)\n                                ]\n                            }, index, true, {\n                                fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                lineNumber: 327,\n                                columnNumber: 17\n                            }, this);\n                        })\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                    lineNumber: 321,\n                    columnNumber: 11\n                }, this),\n                failedResults.length > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"failed-results\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h4\", {\n                            children: [\n                                \"❌ Failed to Compress (\",\n                                failedResults.length,\n                                \")\"\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                            lineNumber: 351,\n                            columnNumber: 13\n                        }, this),\n                        failedResults.map((result, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"result-item error\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"file-name\",\n                                        children: result.original.name\n                                    }, void 0, false, {\n                                        fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                        lineNumber: 354,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"error-message\",\n                                        children: result.error\n                                    }, void 0, false, {\n                                        fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                        lineNumber: 355,\n                                        columnNumber: 17\n                                    }, this)\n                                ]\n                            }, index, true, {\n                                fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                lineNumber: 353,\n                                columnNumber: 15\n                            }, this))\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                    lineNumber: 350,\n                    columnNumber: 11\n                }, this),\n                successfulResults.length > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"download-all-container\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: ()=>(0,_utils_pdfUtils__WEBPACK_IMPORTED_MODULE_6__.downloadAllFiles)(successfulResults.map((r)=>r.compressed)),\n                        children: \"Download All Compressed Files\"\n                    }, void 0, false, {\n                        fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                        lineNumber: 363,\n                        columnNumber: 13\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                    lineNumber: 362,\n                    columnNumber: 11\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n            lineNumber: 317,\n            columnNumber: 7\n        }, this);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_head__WEBPACK_IMPORTED_MODULE_2___default()), {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"title\", {\n                        children: \"Universal File Compressor\"\n                    }, void 0, false, {\n                        fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                        lineNumber: 375,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"viewport\",\n                        content: \"width=device-width, initial-scale=1.0\"\n                    }, void 0, false, {\n                        fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                        lineNumber: 376,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                lineNumber: 374,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_script__WEBPACK_IMPORTED_MODULE_3___default()), {\n                src: \"https://unpkg.com/pdf-lib@1.17.1/dist/pdf-lib.min.js\",\n                strategy: \"beforeInteractive\"\n            }, void 0, false, {\n                fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                lineNumber: 379,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_script__WEBPACK_IMPORTED_MODULE_3___default()), {\n                src: \"https://unpkg.com/pdfjs-dist@3.11.174/build/pdf.min.js\",\n                strategy: \"beforeInteractive\"\n            }, void 0, false, {\n                fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                lineNumber: 383,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"container\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                        children: \"Universal File Compressor\"\n                    }, void 0, false, {\n                        fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                        lineNumber: 389,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"subtitle\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                children: \"Compress PDFs, images, text files, and more while maintaining quality\"\n                            }, void 0, false, {\n                                fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                lineNumber: 391,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                href: \"https://github.com/bchewy/compress\",\n                                className: \"github-link\",\n                                target: \"_blank\",\n                                rel: \"noopener noreferrer\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                        height: \"24\",\n                                        viewBox: \"0 0 16 16\",\n                                        width: \"24\",\n                                        className: \"github-icon\",\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                            fillRule: \"evenodd\",\n                                            d: \"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                            lineNumber: 394,\n                                            columnNumber: 15\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                        lineNumber: 393,\n                                        columnNumber: 13\n                                    }, this),\n                                    \"GitHub Repository\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                lineNumber: 392,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                        lineNumber: 390,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"supported-formats\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                                    children: \"Supported formats:\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                    lineNumber: 401,\n                                    columnNumber: 14\n                                }, this),\n                                \" PDF, JPEG, PNG, GIF, WebP, TXT, MD, JSON, XML, CSV, and more\"\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                            lineNumber: 401,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                        lineNumber: 400,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        ref: dropAreaRef,\n                        className: \"drop-area\",\n                        onDragOver: handleDragOver,\n                        onDragLeave: handleDragLeave,\n                        onDrop: handleDrop,\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                children: \"Drop files here or\"\n                            }, void 0, false, {\n                                fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                lineNumber: 411,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                ref: fileInputRef,\n                                type: \"file\",\n                                accept: (0,_utils_fileTypes__WEBPACK_IMPORTED_MODULE_4__.getAllSupportedExtensions)(),\n                                multiple: true,\n                                hidden: true,\n                                onChange: handleFileSelect\n                            }, void 0, false, {\n                                fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                lineNumber: 412,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: ()=>{\n                                    var _fileInputRef_current;\n                                    return (_fileInputRef_current = fileInputRef.current) === null || _fileInputRef_current === void 0 ? void 0 : _fileInputRef_current.click();\n                                },\n                                children: \"Select Files\"\n                            }, void 0, false, {\n                                fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                lineNumber: 420,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                        lineNumber: 404,\n                        columnNumber: 9\n                    }, this),\n                    files.length > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"file-list-container\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                children: [\n                                    \"Files to Process (\",\n                                    files.length,\n                                    \")\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                lineNumber: 425,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"file-type-tabs\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        className: selectedTab === 'all' ? 'active' : '',\n                                        onClick: ()=>setSelectedTab('all'),\n                                        children: [\n                                            \"All (\",\n                                            files.length,\n                                            \")\"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                        lineNumber: 428,\n                                        columnNumber: 15\n                                    }, this),\n                                    Object.values(_utils_fileTypes__WEBPACK_IMPORTED_MODULE_4__.FILE_TYPES).map((type)=>{\n                                        const typeFiles = getFilesByType(type);\n                                        if (typeFiles.length === 0) return null;\n                                        const info = (0,_utils_fileTypes__WEBPACK_IMPORTED_MODULE_4__.getFileTypeInfo)(type);\n                                        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            className: selectedTab === type ? 'active' : '',\n                                            onClick: ()=>setSelectedTab(type),\n                                            children: [\n                                                info.icon,\n                                                \" \",\n                                                info.description,\n                                                \" (\",\n                                                typeFiles.length,\n                                                \")\"\n                                            ]\n                                        }, type, true, {\n                                            fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                            lineNumber: 440,\n                                            columnNumber: 19\n                                        }, this);\n                                    })\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                lineNumber: 427,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"file-list-content\",\n                                children: selectedTab === 'all' ? renderFileList(files, 'All Files') : renderFileList(getFilesByType(selectedTab), ((_getFileTypeInfo = (0,_utils_fileTypes__WEBPACK_IMPORTED_MODULE_4__.getFileTypeInfo)(selectedTab)) === null || _getFileTypeInfo === void 0 ? void 0 : _getFileTypeInfo.description) || 'Files')\n                            }, void 0, false, {\n                                fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                lineNumber: 451,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                        lineNumber: 424,\n                        columnNumber: 11\n                    }, this),\n                    files.length > 0 && renderCompressionOptions(),\n                    isProcessing && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"processing-status\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                children: \"Processing Files...\"\n                            }, void 0, false, {\n                                fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                lineNumber: 464,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"progress-bar\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"progress\",\n                                    style: {\n                                        width: \"\".concat(processingProgress, \"%\")\n                                    }\n                                }, void 0, false, {\n                                    fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                    lineNumber: 466,\n                                    columnNumber: 15\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                lineNumber: 465,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                children: [\n                                    Math.round(processingProgress),\n                                    \"% - \",\n                                    currentProcessingFile\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                                lineNumber: 468,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                        lineNumber: 463,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"action-buttons\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            className: \"compress-btn\",\n                            disabled: files.length === 0 || isProcessing,\n                            onClick: processFiles,\n                            children: isProcessing ? 'Processing...' : \"Compress \".concat(files.length, \" File\").concat(files.length === 1 ? '' : 's')\n                        }, void 0, false, {\n                            fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                            lineNumber: 473,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                        lineNumber: 472,\n                        columnNumber: 9\n                    }, this),\n                    renderResults()\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/brianchew/dev/compress/components/UniversalCompressor.js\",\n                lineNumber: 388,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true);\n}\n_s(UniversalCompressor, \"K4bC3/ciHGsEYQPUACp3XzN/GYY=\");\n_c = UniversalCompressor;\nvar _c;\n$RefreshReg$(_c, \"UniversalCompressor\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./components/UniversalCompressor.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2FUsers%2Fbrianchew%2Fdev%2Fcompress%2Fpages%2Findex.js&page=%2F!":
/*!**********************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2FUsers%2Fbrianchew%2Fdev%2Fcompress%2Fpages%2Findex.js&page=%2F! ***!
  \**********************************************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return __webpack_require__(/*! ./pages/index.js */ \"(pages-dir-browser)/./pages/index.js\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtY2xpZW50LXBhZ2VzLWxvYWRlci5qcz9hYnNvbHV0ZVBhZ2VQYXRoPSUyRlVzZXJzJTJGYnJpYW5jaGV3JTJGZGV2JTJGY29tcHJlc3MlMkZwYWdlcyUyRmluZGV4LmpzJnBhZ2U9JTJGISIsIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLDhEQUFrQjtBQUN6QztBQUNBO0FBQ0EsT0FBTyxJQUFVO0FBQ2pCLE1BQU0sVUFBVTtBQUNoQjtBQUNBLE9BQU87QUFDUDtBQUNBIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgKHdpbmRvdy5fX05FWFRfUCA9IHdpbmRvdy5fX05FWFRfUCB8fCBbXSkucHVzaChbXG4gICAgICBcIi9cIixcbiAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHJlcXVpcmUoXCIuL3BhZ2VzL2luZGV4LmpzXCIpO1xuICAgICAgfVxuICAgIF0pO1xuICAgIGlmKG1vZHVsZS5ob3QpIHtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbiAoKSB7XG4gICAgICAgIHdpbmRvdy5fX05FWFRfUC5wdXNoKFtcIi9cIl0pXG4gICAgICB9KTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2FUsers%2Fbrianchew%2Fdev%2Fcompress%2Fpages%2Findex.js&page=%2F!\n"));

/***/ }),

/***/ "(pages-dir-browser)/./node_modules/next/head.js":
/*!***********************************!*\
  !*** ./node_modules/next/head.js ***!
  \***********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("module.exports = __webpack_require__(/*! ./dist/shared/lib/head */ \"(pages-dir-browser)/./node_modules/next/dist/shared/lib/head.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2hlYWQuanMiLCJtYXBwaW5ncyI6IkFBQUEscUlBQWtEIiwic291cmNlcyI6WyIvVXNlcnMvYnJpYW5jaGV3L2Rldi9jb21wcmVzcy9ub2RlX21vZHVsZXMvbmV4dC9oZWFkLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9kaXN0L3NoYXJlZC9saWIvaGVhZCcpXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/next/head.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./node_modules/next/script.js":
/*!*************************************!*\
  !*** ./node_modules/next/script.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("module.exports = __webpack_require__(/*! ./dist/client/script */ \"(pages-dir-browser)/./node_modules/next/dist/client/script.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L3NjcmlwdC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxpSUFBZ0QiLCJzb3VyY2VzIjpbIi9Vc2Vycy9icmlhbmNoZXcvZGV2L2NvbXByZXNzL25vZGVfbW9kdWxlcy9uZXh0L3NjcmlwdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZGlzdC9jbGllbnQvc2NyaXB0JylcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/next/script.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./pages/index.js":
/*!************************!*\
  !*** ./pages/index.js ***!
  \************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Home)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _components_UniversalCompressor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/UniversalCompressor */ \"(pages-dir-browser)/./components/UniversalCompressor.js\");\n\n\nfunction Home() {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_UniversalCompressor__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {}, void 0, false, {\n        fileName: \"/Users/brianchew/dev/compress/pages/index.js\",\n        lineNumber: 4,\n        columnNumber: 10\n    }, this);\n}\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL3BhZ2VzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQW9FO0FBRXJELFNBQVNDO0lBQ3RCLHFCQUFPLDhEQUFDRCx1RUFBbUJBOzs7OztBQUM3QjtLQUZ3QkMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9icmlhbmNoZXcvZGV2L2NvbXByZXNzL3BhZ2VzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBVbml2ZXJzYWxDb21wcmVzc29yIGZyb20gJy4uL2NvbXBvbmVudHMvVW5pdmVyc2FsQ29tcHJlc3Nvcic7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEhvbWUoKSB7XG4gIHJldHVybiA8VW5pdmVyc2FsQ29tcHJlc3NvciAvPjtcbn0iXSwibmFtZXMiOlsiVW5pdmVyc2FsQ29tcHJlc3NvciIsIkhvbWUiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./pages/index.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./utils/compressionEngine.js":
/*!************************************!*\
  !*** ./utils/compressionEngine.js ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CompressionEngine: () => (/* binding */ CompressionEngine),\n/* harmony export */   compressionEngine: () => (/* binding */ compressionEngine)\n/* harmony export */ });\n/* harmony import */ var _fileTypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fileTypes */ \"(pages-dir-browser)/./utils/fileTypes.js\");\n/* harmony import */ var _pdfUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pdfUtils */ \"(pages-dir-browser)/./utils/pdfUtils.js\");\n/* harmony import */ var _imageUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./imageUtils */ \"(pages-dir-browser)/./utils/imageUtils.js\");\n/* harmony import */ var _textUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./textUtils */ \"(pages-dir-browser)/./utils/textUtils.js\");\n// Universal compression engine for all file types\n\n\n\n\n\nclass CompressionEngine {\n    // Main compression method that routes to appropriate handler\n    async compressFile(file) {\n        let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, progressCallback = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : ()=>{};\n        const fileType = (0,_fileTypes__WEBPACK_IMPORTED_MODULE_0__.detectFileType)(file);\n        if (!fileType) {\n            throw new Error(\"Unsupported file type: \".concat(file.name));\n        }\n        const jobId = this.generateJobId();\n        this.activeJobs.set(jobId, {\n            file,\n            status: 'processing',\n            startTime: Date.now()\n        });\n        try {\n            let result;\n            switch(fileType){\n                case _fileTypes__WEBPACK_IMPORTED_MODULE_0__.FILE_TYPES.PDF:\n                    result = await this.compressPdfFile(file, options, progressCallback);\n                    break;\n                case _fileTypes__WEBPACK_IMPORTED_MODULE_0__.FILE_TYPES.IMAGE:\n                    result = await this.compressImageFile(file, options, progressCallback);\n                    break;\n                case _fileTypes__WEBPACK_IMPORTED_MODULE_0__.FILE_TYPES.TEXT:\n                    result = await this.compressTextFile(file, options, progressCallback);\n                    break;\n                case _fileTypes__WEBPACK_IMPORTED_MODULE_0__.FILE_TYPES.DOCUMENT:\n                    result = await this.compressDocumentFile(file, options, progressCallback);\n                    break;\n                case _fileTypes__WEBPACK_IMPORTED_MODULE_0__.FILE_TYPES.VIDEO:\n                    result = await this.compressVideoFile(file, options, progressCallback);\n                    break;\n                case _fileTypes__WEBPACK_IMPORTED_MODULE_0__.FILE_TYPES.AUDIO:\n                    result = await this.compressAudioFile(file, options, progressCallback);\n                    break;\n                case _fileTypes__WEBPACK_IMPORTED_MODULE_0__.FILE_TYPES.ARCHIVE:\n                    result = await this.optimizeArchiveFile(file, options, progressCallback);\n                    break;\n                default:\n                    throw new Error(\"No compression handler for file type: \".concat(fileType));\n            }\n            // Add metadata to result\n            result.fileType = fileType;\n            result.originalSize = file.size;\n            result.jobId = jobId;\n            result.processingTime = Date.now() - this.activeJobs.get(jobId).startTime;\n            this.activeJobs.set(jobId, {\n                ...this.activeJobs.get(jobId),\n                status: 'completed',\n                result\n            });\n            return result;\n        } catch (error) {\n            this.activeJobs.set(jobId, {\n                ...this.activeJobs.get(jobId),\n                status: 'failed',\n                error: error.message\n            });\n            throw error;\n        }\n    }\n    // Batch compression for multiple files\n    async compressFiles(files) {\n        let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, progressCallback = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : ()=>{};\n        const results = [];\n        const totalFiles = files.length;\n        // Group files by type for optimized processing\n        const fileGroups = this.groupFilesByType(files);\n        let processedCount = 0;\n        for (const [fileType, groupFiles] of Object.entries(fileGroups)){\n            for (const file of groupFiles){\n                try {\n                    const fileProgressCallback = (progress)=>{\n                        const overallProgress = (processedCount + progress / 100) / totalFiles * 100;\n                        progressCallback(overallProgress, processedCount, file.name, fileType);\n                    };\n                    const result = await this.compressFile(file, options[fileType] || options, fileProgressCallback);\n                    results.push({\n                        original: file,\n                        compressed: result.compressedFile,\n                        metadata: result.metadata || {},\n                        reduction: this.calculateReduction(file.size, result.compressedFile.size),\n                        fileType,\n                        success: true,\n                        processingTime: result.processingTime\n                    });\n                } catch (error) {\n                    _pdfUtils__WEBPACK_IMPORTED_MODULE_1__.debugConfig.error(\"Failed to compress \".concat(file.name, \":\"), error);\n                    results.push({\n                        original: file,\n                        compressed: null,\n                        error: error.message,\n                        fileType,\n                        success: false\n                    });\n                }\n                processedCount++;\n            }\n        }\n        return results;\n    }\n    // PDF compression handler\n    async compressPdfFile(file, options, progressCallback) {\n        const { quality = 50, dpi = 150 } = options;\n        const compressedFile = await (0,_pdfUtils__WEBPACK_IMPORTED_MODULE_1__.compressPdf)(file, quality, dpi, progressCallback);\n        return {\n            compressedFile,\n            metadata: {\n                originalQuality: 'Unknown',\n                newQuality: quality,\n                dpi: dpi,\n                compression: 'JPEG'\n            }\n        };\n    }\n    // Image compression handler\n    async compressImageFile(file, options, progressCallback) {\n        const { quality = 0.8, format = 'jpeg', maxWidth = null, maxHeight = null } = options;\n        const metadata = await (0,_imageUtils__WEBPACK_IMPORTED_MODULE_2__.getImageMetadata)(file);\n        const compressedFile = await (0,_imageUtils__WEBPACK_IMPORTED_MODULE_2__.compressImage)(file, {\n            quality,\n            format,\n            maxWidth,\n            maxHeight,\n            progressCallback\n        });\n        return {\n            compressedFile,\n            metadata: {\n                ...metadata,\n                newFormat: format,\n                newQuality: quality\n            }\n        };\n    }\n    // Text compression handler\n    async compressTextFile(file, options, progressCallback) {\n        const { method = 'optimize', removeComments = true, removeExtraWhitespace = true } = options;\n        const metadata = await (0,_textUtils__WEBPACK_IMPORTED_MODULE_3__.getTextMetadata)(file);\n        const compressedFile = await (0,_textUtils__WEBPACK_IMPORTED_MODULE_3__.compressText)(file, {\n            method,\n            removeComments,\n            removeExtraWhitespace,\n            progressCallback\n        });\n        return {\n            compressedFile,\n            metadata: {\n                ...metadata,\n                compressionMethod: method\n            }\n        };\n    }\n    // Document compression handler (placeholder for future implementation)\n    async compressDocumentFile(file, options, progressCallback) {\n        // For now, return original file with a note\n        progressCallback(100);\n        return {\n            compressedFile: file,\n            metadata: {\n                note: 'Document compression coming soon',\n                format: file.type\n            }\n        };\n    }\n    // Video compression handler (placeholder)\n    async compressVideoFile(file, options, progressCallback) {\n        progressCallback(100);\n        return {\n            compressedFile: file,\n            metadata: {\n                note: 'Video compression coming soon',\n                format: file.type\n            }\n        };\n    }\n    // Audio compression handler (placeholder)\n    async compressAudioFile(file, options, progressCallback) {\n        progressCallback(100);\n        return {\n            compressedFile: file,\n            metadata: {\n                note: 'Audio compression coming soon',\n                format: file.type\n            }\n        };\n    }\n    // Archive optimization handler (placeholder)\n    async optimizeArchiveFile(file, options, progressCallback) {\n        progressCallback(100);\n        return {\n            compressedFile: file,\n            metadata: {\n                note: 'Archive optimization coming soon',\n                format: file.type\n            }\n        };\n    }\n    // Helper methods\n    groupFilesByType(files) {\n        const groups = {};\n        files.forEach((file)=>{\n            const fileType = (0,_fileTypes__WEBPACK_IMPORTED_MODULE_0__.detectFileType)(file);\n            if (fileType) {\n                if (!groups[fileType]) {\n                    groups[fileType] = [];\n                }\n                groups[fileType].push(file);\n            }\n        });\n        return groups;\n    }\n    calculateReduction(originalSize, compressedSize) {\n        return ((originalSize - compressedSize) / originalSize * 100).toFixed(2);\n    }\n    generateJobId() {\n        return \"job_\".concat(Date.now(), \"_\").concat(Math.random().toString(36).substr(2, 9));\n    }\n    getJobStatus(jobId) {\n        return this.activeJobs.get(jobId) || null;\n    }\n    cancelJob(jobId) {\n        if (this.activeJobs.has(jobId)) {\n            this.activeJobs.set(jobId, {\n                ...this.activeJobs.get(jobId),\n                status: 'cancelled'\n            });\n        }\n    }\n    // Get compression recommendations based on file analysis\n    async getCompressionRecommendations(file) {\n        const fileType = (0,_fileTypes__WEBPACK_IMPORTED_MODULE_0__.detectFileType)(file);\n        const fileInfo = (0,_fileTypes__WEBPACK_IMPORTED_MODULE_0__.getFileTypeInfo)(fileType);\n        const recommendations = {\n            fileType,\n            icon: (fileInfo === null || fileInfo === void 0 ? void 0 : fileInfo.icon) || '📄',\n            suggestions: []\n        };\n        switch(fileType){\n            case _fileTypes__WEBPACK_IMPORTED_MODULE_0__.FILE_TYPES.IMAGE:\n                const imageMetadata = await (0,_imageUtils__WEBPACK_IMPORTED_MODULE_2__.getImageMetadata)(file);\n                if (imageMetadata.megapixels > 5) {\n                    recommendations.suggestions.push({\n                        type: 'resize',\n                        description: 'Consider resizing - image is very large',\n                        impact: 'high'\n                    });\n                }\n                if (file.type === 'image/png' && !this.hasTransparency(file)) {\n                    recommendations.suggestions.push({\n                        type: 'format',\n                        description: 'Convert PNG to JPEG for better compression',\n                        impact: 'medium'\n                    });\n                }\n                break;\n            case _fileTypes__WEBPACK_IMPORTED_MODULE_0__.FILE_TYPES.PDF:\n                if (file.size > 10 * 1024 * 1024) {\n                    recommendations.suggestions.push({\n                        type: 'quality',\n                        description: 'Large PDF - consider aggressive compression',\n                        impact: 'high'\n                    });\n                }\n                break;\n            case _fileTypes__WEBPACK_IMPORTED_MODULE_0__.FILE_TYPES.TEXT:\n                const textMetadata = await (0,_textUtils__WEBPACK_IMPORTED_MODULE_3__.getTextMetadata)(file);\n                if (textMetadata.type === 'json') {\n                    recommendations.suggestions.push({\n                        type: 'minify',\n                        description: 'JSON can be minified for better compression',\n                        impact: 'medium'\n                    });\n                }\n                break;\n        }\n        return recommendations;\n    }\n    // Helper to check if PNG has transparency (simplified)\n    hasTransparency(file) {\n        // This would require more complex image analysis\n        // For now, assume PNGs might have transparency\n        return true;\n    }\n    constructor(){\n        this.supportedTypes = Object.values(_fileTypes__WEBPACK_IMPORTED_MODULE_0__.FILE_TYPES);\n        this.activeJobs = new Map();\n    }\n}\n// Export singleton instance\nconst compressionEngine = new CompressionEngine();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./utils/compressionEngine.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./utils/fileTypes.js":
/*!****************************!*\
  !*** ./utils/fileTypes.js ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FILE_TYPES: () => (/* binding */ FILE_TYPES),\n/* harmony export */   SUPPORTED_FORMATS: () => (/* binding */ SUPPORTED_FORMATS),\n/* harmony export */   detectFileType: () => (/* binding */ detectFileType),\n/* harmony export */   getAllSupportedExtensions: () => (/* binding */ getAllSupportedExtensions),\n/* harmony export */   getAllSupportedMimeTypes: () => (/* binding */ getAllSupportedMimeTypes),\n/* harmony export */   getFileTypeInfo: () => (/* binding */ getFileTypeInfo),\n/* harmony export */   isFileSupported: () => (/* binding */ isFileSupported)\n/* harmony export */ });\n// File type definitions and supported formats\nconst FILE_TYPES = {\n    PDF: 'pdf',\n    IMAGE: 'image',\n    TEXT: 'text',\n    DOCUMENT: 'document',\n    VIDEO: 'video',\n    AUDIO: 'audio',\n    ARCHIVE: 'archive'\n};\nconst SUPPORTED_FORMATS = {\n    [FILE_TYPES.PDF]: {\n        extensions: [\n            '.pdf'\n        ],\n        mimeTypes: [\n            'application/pdf'\n        ],\n        icon: '📄',\n        description: 'PDF Documents'\n    },\n    [FILE_TYPES.IMAGE]: {\n        extensions: [\n            '.jpg',\n            '.jpeg',\n            '.png',\n            '.gif',\n            '.bmp',\n            '.webp',\n            '.tiff',\n            '.svg'\n        ],\n        mimeTypes: [\n            'image/jpeg',\n            'image/jpg',\n            'image/png',\n            'image/gif',\n            'image/bmp',\n            'image/webp',\n            'image/tiff',\n            'image/svg+xml'\n        ],\n        icon: '🖼️',\n        description: 'Images'\n    },\n    [FILE_TYPES.TEXT]: {\n        extensions: [\n            '.txt',\n            '.md',\n            '.json',\n            '.xml',\n            '.csv',\n            '.log',\n            '.rtf'\n        ],\n        mimeTypes: [\n            'text/plain',\n            'text/markdown',\n            'application/json',\n            'text/xml',\n            'text/csv',\n            'text/rtf'\n        ],\n        icon: '📝',\n        description: 'Text Files'\n    },\n    [FILE_TYPES.DOCUMENT]: {\n        extensions: [\n            '.doc',\n            '.docx',\n            '.xls',\n            '.xlsx',\n            '.ppt',\n            '.pptx',\n            '.odt',\n            '.ods',\n            '.odp'\n        ],\n        mimeTypes: [\n            'application/msword',\n            'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n            'application/vnd.ms-excel',\n            'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n            'application/vnd.ms-powerpoint',\n            'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n            'application/vnd.oasis.opendocument.text',\n            'application/vnd.oasis.opendocument.spreadsheet',\n            'application/vnd.oasis.opendocument.presentation'\n        ],\n        icon: '📊',\n        description: 'Office Documents'\n    },\n    [FILE_TYPES.VIDEO]: {\n        extensions: [\n            '.mp4',\n            '.avi',\n            '.mov',\n            '.wmv',\n            '.flv',\n            '.webm',\n            '.mkv'\n        ],\n        mimeTypes: [\n            'video/mp4',\n            'video/avi',\n            'video/quicktime',\n            'video/x-ms-wmv',\n            'video/x-flv',\n            'video/webm',\n            'video/x-matroska'\n        ],\n        icon: '🎥',\n        description: 'Videos'\n    },\n    [FILE_TYPES.AUDIO]: {\n        extensions: [\n            '.mp3',\n            '.wav',\n            '.aac',\n            '.ogg',\n            '.flac',\n            '.m4a'\n        ],\n        mimeTypes: [\n            'audio/mpeg',\n            'audio/wav',\n            'audio/aac',\n            'audio/ogg',\n            'audio/flac',\n            'audio/mp4'\n        ],\n        icon: '🎵',\n        description: 'Audio Files'\n    },\n    [FILE_TYPES.ARCHIVE]: {\n        extensions: [\n            '.zip',\n            '.rar',\n            '.7z',\n            '.tar',\n            '.gz'\n        ],\n        mimeTypes: [\n            'application/zip',\n            'application/x-rar-compressed',\n            'application/x-7z-compressed',\n            'application/x-tar',\n            'application/gzip'\n        ],\n        icon: '🗜️',\n        description: 'Archives'\n    }\n};\nfunction detectFileType(file) {\n    const extension = '.' + file.name.split('.').pop().toLowerCase();\n    const mimeType = file.type.toLowerCase();\n    for (const [type, config] of Object.entries(SUPPORTED_FORMATS)){\n        if (config.extensions.includes(extension) || config.mimeTypes.includes(mimeType)) {\n            return type;\n        }\n    }\n    return null;\n}\nfunction isFileSupported(file) {\n    return detectFileType(file) !== null;\n}\nfunction getFileTypeInfo(fileType) {\n    return SUPPORTED_FORMATS[fileType] || null;\n}\nfunction getAllSupportedExtensions() {\n    return Object.values(SUPPORTED_FORMATS).flatMap((format)=>format.extensions).join(',');\n}\nfunction getAllSupportedMimeTypes() {\n    return Object.values(SUPPORTED_FORMATS).flatMap((format)=>format.mimeTypes);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QkFDbEJ1QixPQUFPLENBQUNDLENBQUFBLFNBQVVBLE9BQU92QixVQUFVLEVBQ25Dd0IsSUFBSSxDQUFDO0FBQ1Y7QUFFTyxTQUFTQztJQUNkLE9BQU9YLE9BQU9PLE1BQU0sQ0FBQ3RCLG1CQUNsQnVCLE9BQU8sQ0FBQ0MsQ0FBQUEsU0FBVUEsT0FBT3RCLFNBQVM7QUFDdkMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9icmlhbmNoZXcvZGV2L2NvbXByZXNzL3V0aWxzL2ZpbGVUeXBlcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIHR5cGUgZGVmaW5pdGlvbnMgYW5kIHN1cHBvcnRlZCBmb3JtYXRzXG5cbmV4cG9ydCBjb25zdCBGSUxFX1RZUEVTID0ge1xuICBQREY6ICdwZGYnLFxuICBJTUFHRTogJ2ltYWdlJyxcbiAgVEVYVDogJ3RleHQnLFxuICBET0NVTUVOVDogJ2RvY3VtZW50JyxcbiAgVklERU86ICd2aWRlbycsXG4gIEFVRElPOiAnYXVkaW8nLFxuICBBUkNISVZFOiAnYXJjaGl2ZSdcbn07XG5cbmV4cG9ydCBjb25zdCBTVVBQT1JURURfRk9STUFUUyA9IHtcbiAgW0ZJTEVfVFlQRVMuUERGXToge1xuICAgIGV4dGVuc2lvbnM6IFsnLnBkZiddLFxuICAgIG1pbWVUeXBlczogWydhcHBsaWNhdGlvbi9wZGYnXSxcbiAgICBpY29uOiAn8J+ThCcsXG4gICAgZGVzY3JpcHRpb246ICdQREYgRG9jdW1lbnRzJ1xuICB9LFxuICBbRklMRV9UWVBFUy5JTUFHRV06IHtcbiAgICBleHRlbnNpb25zOiBbJy5qcGcnLCAnLmpwZWcnLCAnLnBuZycsICcuZ2lmJywgJy5ibXAnLCAnLndlYnAnLCAnLnRpZmYnLCAnLnN2ZyddLFxuICAgIG1pbWVUeXBlczogW1xuICAgICAgJ2ltYWdlL2pwZWcnLCAnaW1hZ2UvanBnJywgJ2ltYWdlL3BuZycsICdpbWFnZS9naWYnLCBcbiAgICAgICdpbWFnZS9ibXAnLCAnaW1hZ2Uvd2VicCcsICdpbWFnZS90aWZmJywgJ2ltYWdlL3N2Zyt4bWwnXG4gICAgXSxcbiAgICBpY29uOiAn8J+WvO+4jycsXG4gICAgZGVzY3JpcHRpb246ICdJbWFnZXMnXG4gIH0sXG4gIFtGSUxFX1RZUEVTLlRFWFRdOiB7XG4gICAgZXh0ZW5zaW9uczogWycudHh0JywgJy5tZCcsICcuanNvbicsICcueG1sJywgJy5jc3YnLCAnLmxvZycsICcucnRmJ10sXG4gICAgbWltZVR5cGVzOiBbXG4gICAgICAndGV4dC9wbGFpbicsICd0ZXh0L21hcmtkb3duJywgJ2FwcGxpY2F0aW9uL2pzb24nLCBcbiAgICAgICd0ZXh0L3htbCcsICd0ZXh0L2NzdicsICd0ZXh0L3J0ZidcbiAgICBdLFxuICAgIGljb246ICfwn5OdJyxcbiAgICBkZXNjcmlwdGlvbjogJ1RleHQgRmlsZXMnXG4gIH0sXG4gIFtGSUxFX1RZUEVTLkRPQ1VNRU5UXToge1xuICAgIGV4dGVuc2lvbnM6IFsnLmRvYycsICcuZG9jeCcsICcueGxzJywgJy54bHN4JywgJy5wcHQnLCAnLnBwdHgnLCAnLm9kdCcsICcub2RzJywgJy5vZHAnXSxcbiAgICBtaW1lVHlwZXM6IFtcbiAgICAgICdhcHBsaWNhdGlvbi9tc3dvcmQnLFxuICAgICAgJ2FwcGxpY2F0aW9uL3ZuZC5vcGVueG1sZm9ybWF0cy1vZmZpY2Vkb2N1bWVudC53b3JkcHJvY2Vzc2luZ21sLmRvY3VtZW50JyxcbiAgICAgICdhcHBsaWNhdGlvbi92bmQubXMtZXhjZWwnLFxuICAgICAgJ2FwcGxpY2F0aW9uL3ZuZC5vcGVueG1sZm9ybWF0cy1vZmZpY2Vkb2N1bWVudC5zcHJlYWRzaGVldG1sLnNoZWV0JyxcbiAgICAgICdhcHBsaWNhdGlvbi92bmQubXMtcG93ZXJwb2ludCcsXG4gICAgICAnYXBwbGljYXRpb24vdm5kLm9wZW54bWxmb3JtYXRzLW9mZmljZWRvY3VtZW50LnByZXNlbnRhdGlvbm1sLnByZXNlbnRhdGlvbicsXG4gICAgICAnYXBwbGljYXRpb24vdm5kLm9hc2lzLm9wZW5kb2N1bWVudC50ZXh0JyxcbiAgICAgICdhcHBsaWNhdGlvbi92bmQub2FzaXMub3BlbmRvY3VtZW50LnNwcmVhZHNoZWV0JyxcbiAgICAgICdhcHBsaWNhdGlvbi92bmQub2FzaXMub3BlbmRvY3VtZW50LnByZXNlbnRhdGlvbidcbiAgICBdLFxuICAgIGljb246ICfwn5OKJyxcbiAgICBkZXNjcmlwdGlvbjogJ09mZmljZSBEb2N1bWVudHMnXG4gIH0sXG4gIFtGSUxFX1RZUEVTLlZJREVPXToge1xuICAgIGV4dGVuc2lvbnM6IFsnLm1wNCcsICcuYXZpJywgJy5tb3YnLCAnLndtdicsICcuZmx2JywgJy53ZWJtJywgJy5ta3YnXSxcbiAgICBtaW1lVHlwZXM6IFtcbiAgICAgICd2aWRlby9tcDQnLCAndmlkZW8vYXZpJywgJ3ZpZGVvL3F1aWNrdGltZScsIFxuICAgICAgJ3ZpZGVvL3gtbXMtd212JywgJ3ZpZGVvL3gtZmx2JywgJ3ZpZGVvL3dlYm0nLCAndmlkZW8veC1tYXRyb3NrYSdcbiAgICBdLFxuICAgIGljb246ICfwn46lJyxcbiAgICBkZXNjcmlwdGlvbjogJ1ZpZGVvcydcbiAgfSxcbiAgW0ZJTEVfVFlQRVMuQVVESU9dOiB7XG4gICAgZXh0ZW5zaW9uczogWycubXAzJywgJy53YXYnLCAnLmFhYycsICcub2dnJywgJy5mbGFjJywgJy5tNGEnXSxcbiAgICBtaW1lVHlwZXM6IFtcbiAgICAgICdhdWRpby9tcGVnJywgJ2F1ZGlvL3dhdicsICdhdWRpby9hYWMnLCBcbiAgICAgICdhdWRpby9vZ2cnLCAnYXVkaW8vZmxhYycsICdhdWRpby9tcDQnXG4gICAgXSxcbiAgICBpY29uOiAn8J+OtScsXG4gICAgZGVzY3JpcHRpb246ICdBdWRpbyBGaWxlcydcbiAgfSxcbiAgW0ZJTEVfVFlQRVMuQVJDSElWRV06IHtcbiAgICBleHRlbnNpb25zOiBbJy56aXAnLCAnLnJhcicsICcuN3onLCAnLnRhcicsICcuZ3onXSxcbiAgICBtaW1lVHlwZXM6IFtcbiAgICAgICdhcHBsaWNhdGlvbi96aXAnLCAnYXBwbGljYXRpb24veC1yYXItY29tcHJlc3NlZCcsXG4gICAgICAnYXBwbGljYXRpb24veC03ei1jb21wcmVzc2VkJywgJ2FwcGxpY2F0aW9uL3gtdGFyJywgJ2FwcGxpY2F0aW9uL2d6aXAnXG4gICAgXSxcbiAgICBpY29uOiAn8J+XnO+4jycsXG4gICAgZGVzY3JpcHRpb246ICdBcmNoaXZlcydcbiAgfVxufTtcblxuZXhwb3J0IGZ1bmN0aW9uIGRldGVjdEZpbGVUeXBlKGZpbGUpIHtcbiAgY29uc3QgZXh0ZW5zaW9uID0gJy4nICsgZmlsZS5uYW1lLnNwbGl0KCcuJykucG9wKCkudG9Mb3dlckNhc2UoKTtcbiAgY29uc3QgbWltZVR5cGUgPSBmaWxlLnR5cGUudG9Mb3dlckNhc2UoKTtcbiAgXG4gIGZvciAoY29uc3QgW3R5cGUsIGNvbmZpZ10gb2YgT2JqZWN0LmVudHJpZXMoU1VQUE9SVEVEX0ZPUk1BVFMpKSB7XG4gICAgaWYgKGNvbmZpZy5leHRlbnNpb25zLmluY2x1ZGVzKGV4dGVuc2lvbikgfHwgY29uZmlnLm1pbWVUeXBlcy5pbmNsdWRlcyhtaW1lVHlwZSkpIHtcbiAgICAgIHJldHVybiB0eXBlO1xuICAgIH1cbiAgfVxuICBcbiAgcmV0dXJuIG51bGw7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc0ZpbGVTdXBwb3J0ZWQoZmlsZSkge1xuICByZXR1cm4gZGV0ZWN0RmlsZVR5cGUoZmlsZSkgIT09IG51bGw7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRGaWxlVHlwZUluZm8oZmlsZVR5cGUpIHtcbiAgcmV0dXJuIFNVUFBPUlRFRF9GT1JNQVRTW2ZpbGVUeXBlXSB8fCBudWxsO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0QWxsU3VwcG9ydGVkRXh0ZW5zaW9ucygpIHtcbiAgcmV0dXJuIE9iamVjdC52YWx1ZXMoU1VQUE9SVEVEX0ZPUk1BVFMpXG4gICAgLmZsYXRNYXAoZm9ybWF0ID0+IGZvcm1hdC5leHRlbnNpb25zKVxuICAgIC5qb2luKCcsJyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRBbGxTdXBwb3J0ZWRNaW1lVHlwZXMoKSB7XG4gIHJldHVybiBPYmplY3QudmFsdWVzKFNVUFBPUlRFRF9GT1JNQVRTKVxuICAgIC5mbGF0TWFwKGZvcm1hdCA9PiBmb3JtYXQubWltZVR5cGVzKTtcbn0iXSwibmFtZXMiOlsiRklMRV9UWVBFUyIsIlBERiIsIklNQUdFIiwiVEVYVCIsIkRPQ1VNRU5UIiwiVklERU8iLCJBVURJTyIsIkFSQ0hJVkUiLCJTVVBQT1JURURfRk9STUFUUyIsImV4dGVuc2lvbnMiLCJtaW1lVHlwZXMiLCJpY29uIiwiZGVzY3JpcHRpb24iLCJkZXRlY3RGaWxlVHlwZSIsImZpbGUiLCJleHRlbnNpb24iLCJuYW1lIiwic3BsaXQiLCJwb3AiLCJ0b0xvd2VyQ2FzZSIsIm1pbWVUeXBlIiwidHlwZSIsImNvbmZpZyIsIk9iamVjdCIsImVudHJpZXMiLCJpbmNsdWRlcyIsImlzRmlsZVN1cHBvcnRlZCIsImdldEZpbGVUeXBlSW5mbyIsImZpbGVUeXBlIiwiZ2V0QWxsU3VwcG9ydGVkRXh0ZW5zaW9ucyIsInZhbHVlcyIsImZsYXRNYXAiLCJmb3JtYXQiLCJqb2luIiwiZ2V0QWxsU3VwcG9ydGVkTWltZVR5cGVzIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./utils/fileTypes.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./utils/imageUtils.js":
/*!*****************************!*\
  !*** ./utils/imageUtils.js ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   COMPRESSION_PRESETS: () => (/* binding */ COMPRESSION_PRESETS),\n/* harmony export */   IMAGE_FORMATS: () => (/* binding */ IMAGE_FORMATS),\n/* harmony export */   compressImage: () => (/* binding */ compressImage),\n/* harmony export */   compressImages: () => (/* binding */ compressImages),\n/* harmony export */   convertImageFormat: () => (/* binding */ convertImageFormat),\n/* harmony export */   createThumbnail: () => (/* binding */ createThumbnail),\n/* harmony export */   getImageMetadata: () => (/* binding */ getImageMetadata),\n/* harmony export */   optimizeForWeb: () => (/* binding */ optimizeForWeb),\n/* harmony export */   resizeImage: () => (/* binding */ resizeImage)\n/* harmony export */ });\n/* harmony import */ var _pdfUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pdfUtils */ \"(pages-dir-browser)/./utils/pdfUtils.js\");\n// Image compression and optimization utilities\n\n// Dynamic import for browser-image-compression (client-side only)\nlet imageCompression = null;\nif (true) {\n    __webpack_require__.e(/*! import() */ \"_pages-dir-browser_node_modules_browser-image-compression_dist_browser-image-compression_mjs\").then(__webpack_require__.bind(__webpack_require__, /*! browser-image-compression */ \"(pages-dir-browser)/./node_modules/browser-image-compression/dist/browser-image-compression.mjs\")).then((module)=>{\n        imageCompression = module.default;\n    });\n}\nconst IMAGE_FORMATS = {\n    JPEG: 'jpeg',\n    PNG: 'png',\n    WEBP: 'webp',\n    AVIF: 'avif'\n};\nconst COMPRESSION_PRESETS = {\n    HIGH_QUALITY: {\n        quality: 0.95,\n        description: 'High Quality (Minimal compression)'\n    },\n    BALANCED: {\n        quality: 0.80,\n        description: 'Balanced (Good quality, moderate size)'\n    },\n    OPTIMIZED: {\n        quality: 0.65,\n        description: 'Optimized (Smaller size, good quality)'\n    },\n    AGGRESSIVE: {\n        quality: 0.45,\n        description: 'Aggressive (Small size, lower quality)'\n    },\n    MAXIMUM: {\n        quality: 0.25,\n        description: 'Maximum (Smallest size, basic quality)'\n    }\n};\n// Compress image with specified settings\nasync function compressImage(file) {\n    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    const { quality = 0.8, format = IMAGE_FORMATS.JPEG, maxWidth = null, maxHeight = null, maintainAspectRatio = true, progressCallback = ()=>{} } = options;\n    // Use browser-image-compression if available for better compression\n    if (imageCompression && (format === IMAGE_FORMATS.JPEG || format === IMAGE_FORMATS.PNG)) {\n        try {\n            progressCallback(10);\n            const compressionOptions = {\n                maxSizeMB: 1,\n                maxWidthOrHeight: Math.max(maxWidth || 1920, maxHeight || 1920),\n                useWebWorker: true,\n                quality: quality,\n                fileType: \"image/\".concat(format)\n            };\n            progressCallback(50);\n            const compressedFile = await imageCompression(file, compressionOptions);\n            progressCallback(100);\n            return new File([\n                compressedFile\n            ], changeFileExtension(file.name, format), {\n                type: \"image/\".concat(format)\n            });\n        } catch (error) {\n            _pdfUtils__WEBPACK_IMPORTED_MODULE_0__.debugConfig.warn('browser-image-compression failed, falling back to canvas method:', error);\n        // Fall through to canvas method\n        }\n    }\n    // Fallback to canvas-based compression\n    return new Promise((resolve, reject)=>{\n        const img = new Image();\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        img.onload = ()=>{\n            try {\n                progressCallback(25);\n                // Calculate new dimensions\n                let { width, height } = calculateDimensions(img.width, img.height, maxWidth, maxHeight, maintainAspectRatio);\n                canvas.width = width;\n                canvas.height = height;\n                progressCallback(50);\n                // Draw and compress\n                ctx.drawImage(img, 0, 0, width, height);\n                progressCallback(75);\n                // Convert to blob\n                canvas.toBlob((blob)=>{\n                    if (!blob) {\n                        reject(new Error('Failed to compress image'));\n                        return;\n                    }\n                    progressCallback(100);\n                    // Create new file\n                    const compressedFile = new File([\n                        blob\n                    ], changeFileExtension(file.name, format), {\n                        type: \"image/\".concat(format)\n                    });\n                    resolve(compressedFile);\n                }, \"image/\".concat(format), quality);\n            } catch (error) {\n                reject(error);\n            }\n        };\n        img.onerror = ()=>{\n            reject(new Error('Failed to load image'));\n        };\n        // Load the image\n        img.src = URL.createObjectURL(file);\n    });\n}\n// Batch compress multiple images\nasync function compressImages(files) {\n    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, progressCallback = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : ()=>{};\n    const results = [];\n    const totalFiles = files.length;\n    for(let i = 0; i < totalFiles; i++){\n        const file = files[i];\n        try {\n            const fileProgressCallback = (progress)=>{\n                const overallProgress = (i / totalFiles + progress / 100 / totalFiles) * 100;\n                progressCallback(overallProgress, i, file.name);\n            };\n            const compressedFile = await compressImage(file, {\n                ...options,\n                progressCallback: fileProgressCallback\n            });\n            results.push({\n                original: file,\n                compressed: compressedFile,\n                reduction: calculateReduction(file.size, compressedFile.size),\n                success: true\n            });\n        } catch (error) {\n            _pdfUtils__WEBPACK_IMPORTED_MODULE_0__.debugConfig.error(\"Failed to compress \".concat(file.name, \":\"), error);\n            results.push({\n                original: file,\n                compressed: null,\n                error: error.message,\n                success: false\n            });\n        }\n    }\n    return results;\n}\n// Convert image format\nasync function convertImageFormat(file, targetFormat) {\n    let quality = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0.9;\n    if (!Object.values(IMAGE_FORMATS).includes(targetFormat)) {\n        throw new Error(\"Unsupported target format: \".concat(targetFormat));\n    }\n    return compressImage(file, {\n        format: targetFormat,\n        quality\n    });\n}\n// Resize image\nasync function resizeImage(file, width, height) {\n    let maintainAspectRatio = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : true;\n    return compressImage(file, {\n        maxWidth: width,\n        maxHeight: height,\n        maintainAspectRatio,\n        quality: 0.95 // High quality for resize operations\n    });\n}\n// Create image thumbnails\nasync function createThumbnail(file) {\n    let size = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 150;\n    return compressImage(file, {\n        maxWidth: size,\n        maxHeight: size,\n        maintainAspectRatio: true,\n        quality: 0.8,\n        format: IMAGE_FORMATS.JPEG\n    });\n}\n// Helper functions\nfunction calculateDimensions(originalWidth, originalHeight, maxWidth, maxHeight, maintainAspectRatio) {\n    let width = originalWidth;\n    let height = originalHeight;\n    if (!maxWidth && !maxHeight) {\n        return {\n            width,\n            height\n        };\n    }\n    if (maintainAspectRatio) {\n        const aspectRatio = originalWidth / originalHeight;\n        if (maxWidth && maxHeight) {\n            // Fit within both constraints\n            if (width > maxWidth) {\n                width = maxWidth;\n                height = width / aspectRatio;\n            }\n            if (height > maxHeight) {\n                height = maxHeight;\n                width = height * aspectRatio;\n            }\n        } else if (maxWidth) {\n            if (width > maxWidth) {\n                width = maxWidth;\n                height = width / aspectRatio;\n            }\n        } else if (maxHeight) {\n            if (height > maxHeight) {\n                height = maxHeight;\n                width = height * aspectRatio;\n            }\n        }\n    } else {\n        // Don't maintain aspect ratio\n        if (maxWidth) width = Math.min(width, maxWidth);\n        if (maxHeight) height = Math.min(height, maxHeight);\n    }\n    return {\n        width: Math.round(width),\n        height: Math.round(height)\n    };\n}\nfunction changeFileExtension(filename, newFormat) {\n    const nameWithoutExt = filename.substring(0, filename.lastIndexOf('.'));\n    return \"\".concat(nameWithoutExt, \".\").concat(newFormat);\n}\nfunction calculateReduction(originalSize, compressedSize) {\n    return ((originalSize - compressedSize) / originalSize * 100).toFixed(2);\n}\n// Get image metadata\nasync function getImageMetadata(file) {\n    return new Promise((resolve, reject)=>{\n        const img = new Image();\n        img.onload = ()=>{\n            resolve({\n                width: img.width,\n                height: img.height,\n                aspectRatio: (img.width / img.height).toFixed(2),\n                megapixels: (img.width * img.height / 1000000).toFixed(2),\n                size: (0,_pdfUtils__WEBPACK_IMPORTED_MODULE_0__.formatFileSize)(file.size),\n                format: file.type,\n                filename: file.name\n            });\n            URL.revokeObjectURL(img.src);\n        };\n        img.onerror = ()=>{\n            reject(new Error('Failed to load image for metadata extraction'));\n        };\n        img.src = URL.createObjectURL(file);\n    });\n}\n// Optimize image for web\nasync function optimizeForWeb(file) {\n    let targetSize = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 'medium';\n    const presets = {\n        small: {\n            maxWidth: 800,\n            quality: 0.7,\n            format: IMAGE_FORMATS.WEBP\n        },\n        medium: {\n            maxWidth: 1200,\n            quality: 0.8,\n            format: IMAGE_FORMATS.WEBP\n        },\n        large: {\n            maxWidth: 1920,\n            quality: 0.85,\n            format: IMAGE_FORMATS.WEBP\n        },\n        retina: {\n            maxWidth: 2560,\n            quality: 0.9,\n            format: IMAGE_FORMATS.WEBP\n        }\n    };\n    const preset = presets[targetSize] || presets.medium;\n    return compressImage(file, {\n        ...preset,\n        maintainAspectRatio: true\n    });\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL3V0aWxzL2ltYWdlVXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBLCtDQUErQztBQUVVO0FBRXpELGtFQUFrRTtBQUNsRSxJQUFJRSxtQkFBbUI7QUFDdkIsSUFBSSxJQUE2QixFQUFFO0lBQ2pDLDZUQUFtQyxDQUFDQyxJQUFJLENBQUNDLENBQUFBO1FBQ3ZDRixtQkFBbUJFLE9BQU9DLE9BQU87SUFDbkM7QUFDRjtBQUVPLE1BQU1DLGdCQUFnQjtJQUMzQkMsTUFBTTtJQUNOQyxLQUFLO0lBQ0xDLE1BQU07SUFDTkMsTUFBTTtBQUNSLEVBQUU7QUFFSyxNQUFNQyxzQkFBc0I7SUFDakNDLGNBQWM7UUFBRUMsU0FBUztRQUFNQyxhQUFhO0lBQXFDO0lBQ2pGQyxVQUFVO1FBQUVGLFNBQVM7UUFBTUMsYUFBYTtJQUF5QztJQUNqRkUsV0FBVztRQUFFSCxTQUFTO1FBQU1DLGFBQWE7SUFBeUM7SUFDbEZHLFlBQVk7UUFBRUosU0FBUztRQUFNQyxhQUFhO0lBQXlDO0lBQ25GSSxTQUFTO1FBQUVMLFNBQVM7UUFBTUMsYUFBYTtJQUF5QztBQUNsRixFQUFFO0FBRUYseUNBQXlDO0FBQ2xDLGVBQWVLLGNBQWNDLElBQUk7UUFBRUMsVUFBQUEsaUVBQVUsQ0FBQztJQUNuRCxNQUFNLEVBQ0pSLFVBQVUsR0FBRyxFQUNiUyxTQUFTaEIsY0FBY0MsSUFBSSxFQUMzQmdCLFdBQVcsSUFBSSxFQUNmQyxZQUFZLElBQUksRUFDaEJDLHNCQUFzQixJQUFJLEVBQzFCQyxtQkFBbUIsS0FBTyxDQUFDLEVBQzVCLEdBQUdMO0lBRUosb0VBQW9FO0lBQ3BFLElBQUluQixvQkFBcUJvQixDQUFBQSxXQUFXaEIsY0FBY0MsSUFBSSxJQUFJZSxXQUFXaEIsY0FBY0UsR0FBRyxHQUFHO1FBQ3ZGLElBQUk7WUFDRmtCLGlCQUFpQjtZQUVqQixNQUFNQyxxQkFBcUI7Z0JBQ3pCQyxXQUFXO2dCQUNYQyxrQkFBa0JDLEtBQUtDLEdB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VUFBVTtZQUFNVixTQUFTO1lBQUtTLFFBQVFoQixjQUFjRyxJQUFJO1FBQUM7SUFDckU7SUFFQSxNQUFNcUcsU0FBU0wsT0FBTyxDQUFDRCxXQUFXLElBQUlDLFFBQVFFLE1BQU07SUFFcEQsT0FBT3hGLGNBQWNDLE1BQU07UUFDekIsR0FBRzBGLE1BQU07UUFDVHJGLHFCQUFxQjtJQUN2QjtBQUNGIiwic291cmNlcyI6WyIvVXNlcnMvYnJpYW5jaGV3L2Rldi9jb21wcmVzcy91dGlscy9pbWFnZVV0aWxzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltYWdlIGNvbXByZXNzaW9uIGFuZCBvcHRpbWl6YXRpb24gdXRpbGl0aWVzXG5cbmltcG9ydCB7IGRlYnVnQ29uZmlnLCBmb3JtYXRGaWxlU2l6ZSB9IGZyb20gJy4vcGRmVXRpbHMnO1xuXG4vLyBEeW5hbWljIGltcG9ydCBmb3IgYnJvd3Nlci1pbWFnZS1jb21wcmVzc2lvbiAoY2xpZW50LXNpZGUgb25seSlcbmxldCBpbWFnZUNvbXByZXNzaW9uID0gbnVsbDtcbmlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICBpbXBvcnQoJ2Jyb3dzZXItaW1hZ2UtY29tcHJlc3Npb24nKS50aGVuKG1vZHVsZSA9PiB7XG4gICAgaW1hZ2VDb21wcmVzc2lvbiA9IG1vZHVsZS5kZWZhdWx0O1xuICB9KTtcbn1cblxuZXhwb3J0IGNvbnN0IElNQUdFX0ZPUk1BVFMgPSB7XG4gIEpQRUc6ICdqcGVnJyxcbiAgUE5HOiAncG5nJyxcbiAgV0VCUDogJ3dlYnAnLFxuICBBVklGOiAnYXZpZidcbn07XG5cbmV4cG9ydCBjb25zdCBDT01QUkVTU0lPTl9QUkVTRVRTID0ge1xuICBISUdIX1FVQUxJVFk6IHsgcXVhbGl0eTogMC45NSwgZGVzY3JpcHRpb246ICdIaWdoIFF1YWxpdHkgKE1pbmltYWwgY29tcHJlc3Npb24pJyB9LFxuICBCQUxBTkNFRDogeyBxdWFsaXR5OiAwLjgwLCBkZXNjcmlwdGlvbjogJ0JhbGFuY2VkIChHb29kIHF1YWxpdHksIG1vZGVyYXRlIHNpemUpJyB9LFxuICBPUFRJTUlaRUQ6IHsgcXVhbGl0eTogMC42NSwgZGVzY3JpcHRpb246ICdPcHRpbWl6ZWQgKFNtYWxsZXIgc2l6ZSwgZ29vZCBxdWFsaXR5KScgfSxcbiAgQUdHUkVTU0lWRTogeyBxdWFsaXR5OiAwLjQ1LCBkZXNjcmlwdGlvbjogJ0FnZ3Jlc3NpdmUgKFNtYWxsIHNpemUsIGxvd2VyIHF1YWxpdHkpJyB9LFxuICBNQVhJTVVNOiB7IHF1YWxpdHk6IDAuMjUsIGRlc2NyaXB0aW9uOiAnTWF4aW11bSAoU21hbGxlc3Qgc2l6ZSwgYmFzaWMgcXVhbGl0eSknIH1cbn07XG5cbi8vIENvbXByZXNzIGltYWdlIHdpdGggc3BlY2lmaWVkIHNldHRpbmdzXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY29tcHJlc3NJbWFnZShmaWxlLCBvcHRpb25zID0ge30pIHtcbiAgY29uc3Qge1xuICAgIHF1YWxpdHkgPSAwLjgsXG4gICAgZm9ybWF0ID0gSU1BR0VfRk9STUFUUy5KUEVHLFxuICAgIG1heFdpZHRoID0gbnVsbCxcbiAgICBtYXhIZWlnaHQgPSBudWxsLFxuICAgIG1haW50YWluQXNwZWN0UmF0aW8gPSB0cnVlLFxuICAgIHByb2dyZXNzQ2FsbGJhY2sgPSAoKSA9PiB7fVxuICB9ID0gb3B0aW9ucztcblxuICAvLyBVc2UgYnJvd3Nlci1pbWFnZS1jb21wcmVzc2lvbiBpZiBhdmFpbGFibGUgZm9yIGJldHRlciBjb21wcmVzc2lvblxuICBpZiAoaW1hZ2VDb21wcmVzc2lvbiAmJiAoZm9ybWF0ID09PSBJTUFHRV9GT1JNQVRTLkpQRUcgfHwgZm9ybWF0ID09PSBJTUFHRV9GT1JNQVRTLlBORykpIHtcbiAgICB0cnkge1xuICAgICAgcHJvZ3Jlc3NDYWxsYmFjaygxMCk7XG4gICAgICBcbiAgICAgIGNvbnN0IGNvbXByZXNzaW9uT3B0aW9ucyA9IHtcbiAgICAgICAgbWF4U2l6ZU1COiAxLCAvLyBNYXggZmlsZSBzaXplIGluIE1CXG4gICAgICAgIG1heFdpZHRoT3JIZWlnaHQ6IE1hdGgubWF4KG1heFdpZHRoIHx8IDE5MjAsIG1heEhlaWdodCB8fCAxOTIwKSxcbiAgICAgICAgdXNlV2ViV29ya2VyOiB0cnVlLFxuICAgICAgICBxdWFsaXR5OiBxdWFsaXR5LFxuICAgICAgICBmaWxlVHlwZTogYGltYWdlLyR7Zm9ybWF0fWBcbiAgICAgIH07XG5cbiAgICAgIHByb2dyZXNzQ2FsbGJhY2soNTApO1xuICAgICAgXG4gICAgICBjb25zdCBjb21wcmVzc2VkRmlsZSA9IGF3YWl0IGltYWdlQ29tcHJlc3Npb24oZmlsZSwgY29tcHJlc3Npb25PcHRpb25zKTtcbiAgICAgIFxuICAgICAgcHJvZ3Jlc3NDYWxsYmFjaygxMDApO1xuICAgICAgXG4gICAgICByZXR1cm4gbmV3IEZpbGUoW2NvbXByZXNzZWRGaWxlXSwgY2hhbmdlRmlsZUV4dGVuc2lvbihmaWxlLm5hbWUsIGZvcm1hdCksIHtcbiAgICAgICAgdHlwZTogYGltYWdlLyR7Zm9ybWF0fWBcbiAgICAgIH0pO1xuICAgICAgXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGRlYnVnQ29uZmlnLndhcm4oJ2Jyb3dzZXItaW1hZ2UtY29tcHJlc3Npb24gZmFpbGVkLCBmYWxsaW5nIGJhY2sgdG8gY2FudmFzIG1ldGhvZDonLCBlcnJvcik7XG4gICAgICAvLyBGYWxsIHRocm91Z2ggdG8gY2FudmFzIG1ldGhvZFxuICAgIH1cbiAgfVxuXG4gIC8vIEZhbGxiYWNrIHRvIGNhbnZhcy1iYXNlZCBjb21wcmVzc2lvblxuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGNvbnN0IGltZyA9IG5ldyBJbWFnZSgpO1xuICAgIGNvbnN0IGNhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2NhbnZhcycpO1xuICAgIGNvbnN0IGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KCcyZCcpO1xuXG4gICAgaW1nLm9ubG9hZCA9ICgpID0+IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIHByb2dyZXNzQ2FsbGJhY2soMjUpO1xuXG4gICAgICAgIC8vIENhbGN1bGF0ZSBuZXcgZGltZW5zaW9uc1xuICAgICAgICBsZXQgeyB3aWR0aCwgaGVpZ2h0IH0gPSBjYWxjdWxhdGVEaW1lbnNpb25zKFxuICAgICAgICAgIGltZy53aWR0aCwgXG4gICAgICAgICAgaW1nLmhlaWdodCwgXG4gICAgICAgICAgbWF4V2lkdGgsIFxuICAgICAgICAgIG1heEhlaWdodCwgXG4gICAgICAgICAgbWFpbnRhaW5Bc3BlY3RSYXRpb1xuICAgICAgICApO1xuXG4gICAgICAgIGNhbnZhcy53aWR0aCA9IHdpZHRoO1xuICAgICAgICBjYW52YXMuaGVpZ2h0ID0gaGVpZ2h0O1xuXG4gICAgICAgIHByb2dyZXNzQ2FsbGJhY2soNTApO1xuXG4gICAgICAgIC8vIERyYXcgYW5kIGNvbXByZXNzXG4gICAgICAgIGN0eC5kcmF3SW1hZ2UoaW1nLCAwLCAwLCB3aWR0aCwgaGVpZ2h0KTtcbiAgICAgICAgXG4gICAgICAgIHByb2dyZXNzQ2FsbGJhY2soNzUpO1xuXG4gICAgICAgIC8vIENvbnZlcnQgdG8gYmxvYlxuICAgICAgICBjYW52YXMudG9CbG9iKChibG9iKSA9PiB7XG4gICAgICAgICAgaWYgKCFibG9iKSB7XG4gICAgICAgICAgICByZWplY3QobmV3IEVycm9yKCdGYWlsZWQgdG8gY29tcHJlc3MgaW1hZ2UnKSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcHJvZ3Jlc3NDYWxsYmFjaygxMDApO1xuXG4gICAgICAgICAgLy8gQ3JlYXRlIG5ldyBmaWxlXG4gICAgICAgICAgY29uc3QgY29tcHJlc3NlZEZpbGUgPSBuZXcgRmlsZShcbiAgICAgICAgICAgIFtibG9iXSwgXG4gICAgICAgICAgICBjaGFuZ2VGaWxlRXh0ZW5zaW9uKGZpbGUubmFtZSwgZm9ybWF0KSwgXG4gICAgICAgICAgICB7IHR5cGU6IGBpbWFnZS8ke2Zvcm1hdH1gIH1cbiAgICAgICAgICApO1xuXG4gICAgICAgICAgcmVzb2x2ZShjb21wcmVzc2VkRmlsZSk7XG4gICAgICAgIH0sIGBpbWFnZS8ke2Zvcm1hdH1gLCBxdWFsaXR5KTtcblxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgcmVqZWN0KGVycm9yKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgaW1nLm9uZXJyb3IgPSAoKSA9PiB7XG4gICAgICByZWplY3QobmV3IEVycm9yKCdGYWlsZWQgdG8gbG9hZCBpbWFnZScpKTtcbiAgICB9O1xuXG4gICAgLy8gTG9hZCB0aGUgaW1hZ2VcbiAgICBpbWcuc3JjID0gVVJMLmNyZWF0ZU9iamVjdFVSTChmaWxlKTtcbiAgfSk7XG59XG5cbi8vIEJhdGNoIGNvbXByZXNzIG11bHRpcGxlIGltYWdlc1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNvbXByZXNzSW1hZ2VzKGZpbGVzLCBvcHRpb25zID0ge30sIHByb2dyZXNzQ2FsbGJhY2sgPSAoKSA9PiB7fSkge1xuICBjb25zdCByZXN1bHRzID0gW107XG4gIGNvbnN0IHRvdGFsRmlsZXMgPSBmaWxlcy5sZW5ndGg7XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCB0b3RhbEZpbGVzOyBpKyspIHtcbiAgICBjb25zdCBmaWxlID0gZmlsZXNbaV07XG4gICAgXG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGZpbGVQcm9ncmVzc0NhbGxiYWNrID0gKHByb2dyZXNzKSA9PiB7XG4gICAgICAgIGNvbnN0IG92ZXJhbGxQcm9ncmVzcyA9ICgoaSAvIHRvdGFsRmlsZXMpICsgKHByb2dyZXNzIC8gMTAwKSAvIHRvdGFsRmlsZXMpICogMTAwO1xuICAgICAgICBwcm9ncmVzc0NhbGxiYWNrKG92ZXJhbGxQcm9ncmVzcywgaSwgZmlsZS5uYW1lKTtcbiAgICAgIH07XG5cbiAgICAgIGNvbnN0IGNvbXByZXNzZWRGaWxlID0gYXdhaXQgY29tcHJlc3NJbWFnZShmaWxlLCB7XG4gICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgIHByb2dyZXNzQ2FsbGJhY2s6IGZpbGVQcm9ncmVzc0NhbGxiYWNrXG4gICAgICB9KTtcblxuICAgICAgcmVzdWx0cy5wdXNoKHtcbiAgICAgICAgb3JpZ2luYWw6IGZpbGUsXG4gICAgICAgIGNvbXByZXNzZWQ6IGNvbXByZXNzZWRGaWxlLFxuICAgICAgICByZWR1Y3Rpb246IGNhbGN1bGF0ZVJlZHVjdGlvbihmaWxlLnNpemUsIGNvbXByZXNzZWRGaWxlLnNpemUpLFxuICAgICAgICBzdWNjZXNzOiB0cnVlXG4gICAgICB9KTtcblxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBkZWJ1Z0NvbmZpZy5lcnJvcihgRmFpbGVkIHRvIGNvbXByZXNzICR7ZmlsZS5uYW1lfTpgLCBlcnJvcik7XG4gICAgICByZXN1bHRzLnB1c2goe1xuICAgICAgICBvcmlnaW5hbDogZmlsZSxcbiAgICAgICAgY29tcHJlc3NlZDogbnVsbCxcbiAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UsXG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlXG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0cztcbn1cblxuLy8gQ29udmVydCBpbWFnZSBmb3JtYXRcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjb252ZXJ0SW1hZ2VGb3JtYXQoZmlsZSwgdGFyZ2V0Rm9ybWF0LCBxdWFsaXR5ID0gMC45KSB7XG4gIGlmICghT2JqZWN0LnZhbHVlcyhJTUFHRV9GT1JNQVRTKS5pbmNsdWRlcyh0YXJnZXRGb3JtYXQpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBVbnN1cHBvcnRlZCB0YXJnZXQgZm9ybWF0OiAke3RhcmdldEZvcm1hdH1gKTtcbiAgfVxuXG4gIHJldHVybiBjb21wcmVzc0ltYWdlKGZpbGUsIHtcbiAgICBmb3JtYXQ6IHRhcmdldEZvcm1hdCxcbiAgICBxdWFsaXR5XG4gIH0pO1xufVxuXG4vLyBSZXNpemUgaW1hZ2VcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiByZXNpemVJbWFnZShmaWxlLCB3aWR0aCwgaGVpZ2h0LCBtYWludGFpbkFzcGVjdFJhdGlvID0gdHJ1ZSkge1xuICByZXR1cm4gY29tcHJlc3NJbWFnZShmaWxlLCB7XG4gICAgbWF4V2lkdGg6IHdpZHRoLFxuICAgIG1heEhlaWdodDogaGVpZ2h0LFxuICAgIG1haW50YWluQXNwZWN0UmF0aW8sXG4gICAgcXVhbGl0eTogMC45NSAvLyBIaWdoIHF1YWxpdHkgZm9yIHJlc2l6ZSBvcGVyYXRpb25zXG4gIH0pO1xufVxuXG4vLyBDcmVhdGUgaW1hZ2UgdGh1bWJuYWlsc1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNyZWF0ZVRodW1ibmFpbChmaWxlLCBzaXplID0gMTUwKSB7XG4gIHJldHVybiBjb21wcmVzc0ltYWdlKGZpbGUsIHtcbiAgICBtYXhXaWR0aDogc2l6ZSxcbiAgICBtYXhIZWlnaHQ6IHNpemUsXG4gICAgbWFpbnRhaW5Bc3BlY3RSYXRpbzogdHJ1ZSxcbiAgICBxdWFsaXR5OiAwLjgsXG4gICAgZm9ybWF0OiBJTUFHRV9GT1JNQVRTLkpQRUdcbiAgfSk7XG59XG5cbi8vIEhlbHBlciBmdW5jdGlvbnNcbmZ1bmN0aW9uIGNhbGN1bGF0ZURpbWVuc2lvbnMob3JpZ2luYWxXaWR0aCwgb3JpZ2luYWxIZWlnaHQsIG1heFdpZHRoLCBtYXhIZWlnaHQsIG1haW50YWluQXNwZWN0UmF0aW8pIHtcbiAgbGV0IHdpZHRoID0gb3JpZ2luYWxXaWR0aDtcbiAgbGV0IGhlaWdodCA9IG9yaWdpbmFsSGVpZ2h0O1xuXG4gIGlmICghbWF4V2lkdGggJiYgIW1heEhlaWdodCkge1xuICAgIHJldHVybiB7IHdpZHRoLCBoZWlnaHQgfTtcbiAgfVxuXG4gIGlmIChtYWludGFpbkFzcGVjdFJhdGlvKSB7XG4gICAgY29uc3QgYXNwZWN0UmF0aW8gPSBvcmlnaW5hbFdpZHRoIC8gb3JpZ2luYWxIZWlnaHQ7XG5cbiAgICBpZiAobWF4V2lkdGggJiYgbWF4SGVpZ2h0KSB7XG4gICAgICAvLyBGaXQgd2l0aGluIGJvdGggY29uc3RyYWludHNcbiAgICAgIGlmICh3aWR0aCA+IG1heFdpZHRoKSB7XG4gICAgICAgIHdpZHRoID0gbWF4V2lkdGg7XG4gICAgICAgIGhlaWdodCA9IHdpZHRoIC8gYXNwZWN0UmF0aW87XG4gICAgICB9XG4gICAgICBpZiAoaGVpZ2h0ID4gbWF4SGVpZ2h0KSB7XG4gICAgICAgIGhlaWdodCA9IG1heEhlaWdodDtcbiAgICAgICAgd2lkdGggPSBoZWlnaHQgKiBhc3BlY3RSYXRpbztcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKG1heFdpZHRoKSB7XG4gICAgICBpZiAod2lkdGggPiBtYXhXaWR0aCkge1xuICAgICAgICB3aWR0aCA9IG1heFdpZHRoO1xuICAgICAgICBoZWlnaHQgPSB3aWR0aCAvIGFzcGVjdFJhdGlvO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAobWF4SGVpZ2h0KSB7XG4gICAgICBpZiAoaGVpZ2h0ID4gbWF4SGVpZ2h0KSB7XG4gICAgICAgIGhlaWdodCA9IG1heEhlaWdodDtcbiAgICAgICAgd2lkdGggPSBoZWlnaHQgKiBhc3BlY3RSYXRpbztcbiAgICAgIH1cbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgLy8gRG9uJ3QgbWFpbnRhaW4gYXNwZWN0IHJhdGlvXG4gICAgaWYgKG1heFdpZHRoKSB3aWR0aCA9IE1hdGgubWluKHdpZHRoLCBtYXhXaWR0aCk7XG4gICAgaWYgKG1heEhlaWdodCkgaGVpZ2h0ID0gTWF0aC5taW4oaGVpZ2h0LCBtYXhIZWlnaHQpO1xuICB9XG5cbiAgcmV0dXJuIHsgXG4gICAgd2lkdGg6IE1hdGgucm91bmQod2lkdGgpLCBcbiAgICBoZWlnaHQ6IE1hdGgucm91bmQoaGVpZ2h0KSBcbiAgfTtcbn1cblxuZnVuY3Rpb24gY2hhbmdlRmlsZUV4dGVuc2lvbihmaWxlbmFtZSwgbmV3Rm9ybWF0KSB7XG4gIGNvbnN0IG5hbWVXaXRob3V0RXh0ID0gZmlsZW5hbWUuc3Vic3RyaW5nKDAsIGZpbGVuYW1lLmxhc3RJbmRleE9mKCcuJykpO1xuICByZXR1cm4gYCR7bmFtZVdpdGhvdXRFeHR9LiR7bmV3Rm9ybWF0fWA7XG59XG5cbmZ1bmN0aW9uIGNhbGN1bGF0ZVJlZHVjdGlvbihvcmlnaW5hbFNpemUsIGNvbXByZXNzZWRTaXplKSB7XG4gIHJldHVybiAoKG9yaWdpbmFsU2l6ZSAtIGNvbXByZXNzZWRTaXplKSAvIG9yaWdpbmFsU2l6ZSAqIDEwMCkudG9GaXhlZCgyKTtcbn1cblxuLy8gR2V0IGltYWdlIG1ldGFkYXRhXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0SW1hZ2VNZXRhZGF0YShmaWxlKSB7XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgY29uc3QgaW1nID0gbmV3IEltYWdlKCk7XG4gICAgXG4gICAgaW1nLm9ubG9hZCA9ICgpID0+IHtcbiAgICAgIHJlc29sdmUoe1xuICAgICAgICB3aWR0aDogaW1nLndpZHRoLFxuICAgICAgICBoZWlnaHQ6IGltZy5oZWlnaHQsXG4gICAgICAgIGFzcGVjdFJhdGlvOiAoaW1nLndpZHRoIC8gaW1nLmhlaWdodCkudG9GaXhlZCgyKSxcbiAgICAgICAgbWVnYXBpeGVsczogKChpbWcud2lkdGggKiBpbWcuaGVpZ2h0KSAvIDEwMDAwMDApLnRvRml4ZWQoMiksXG4gICAgICAgIHNpemU6IGZvcm1hdEZpbGVTaXplKGZpbGUuc2l6ZSksXG4gICAgICAgIGZvcm1hdDogZmlsZS50eXBlLFxuICAgICAgICBmaWxlbmFtZTogZmlsZS5uYW1lXG4gICAgICB9KTtcbiAgICAgIFVSTC5yZXZva2VPYmplY3RVUkwoaW1nLnNyYyk7XG4gICAgfTtcblxuICAgIGltZy5vbmVycm9yID0gKCkgPT4ge1xuICAgICAgcmVqZWN0KG5ldyBFcnJvcignRmFpbGVkIHRvIGxvYWQgaW1hZ2UgZm9yIG1ldGFkYXRhIGV4dHJhY3Rpb24nKSk7XG4gICAgfTtcblxuICAgIGltZy5zcmMgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGZpbGUpO1xuICB9KTtcbn1cblxuLy8gT3B0aW1pemUgaW1hZ2UgZm9yIHdlYlxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG9wdGltaXplRm9yV2ViKGZpbGUsIHRhcmdldFNpemUgPSAnbWVkaXVtJykge1xuICBjb25zdCBwcmVzZXRzID0ge1xuICAgIHNtYWxsOiB7IG1heFdpZHRoOiA4MDAsIHF1YWxpdHk6IDAuNywgZm9ybWF0OiBJTUFHRV9GT1JNQVRTLldFQlAgfSxcbiAgICBtZWRpdW06IHsgbWF4V2lkdGg6IDEyMDAsIHF1YWxpdHk6IDAuOCwgZm9ybWF0OiBJTUFHRV9GT1JNQVRTLldFQlAgfSxcbiAgICBsYXJnZTogeyBtYXhXaWR0aDogMTkyMCwgcXVhbGl0eTogMC44NSwgZm9ybWF0OiBJTUFHRV9GT1JNQVRTLldFQlAgfSxcbiAgICByZXRpbmE6IHsgbWF4V2lkdGg6IDI1NjAsIHF1YWxpdHk6IDAuOSwgZm9ybWF0OiBJTUFHRV9GT1JNQVRTLldFQlAgfVxuICB9O1xuXG4gIGNvbnN0IHByZXNldCA9IHByZXNldHNbdGFyZ2V0U2l6ZV0gfHwgcHJlc2V0cy5tZWRpdW07XG4gIFxuICByZXR1cm4gY29tcHJlc3NJbWFnZShmaWxlLCB7XG4gICAgLi4ucHJlc2V0LFxuICAgIG1haW50YWluQXNwZWN0UmF0aW86IHRydWVcbiAgfSk7XG59Il0sIm5hbWVzIjpbImRlYnVnQ29uZmlnIiwiZm9ybWF0RmlsZVNpemUiLCJpbWFnZUNvbXByZXNzaW9uIiwidGhlbiIsIm1vZHVsZSIsImRlZmF1bHQiLCJJTUFHRV9GT1JNQVRTIiwiSlBFRyIsIlBORyIsIldFQlAiLCJBVklGIiwiQ09NUFJFU1NJT05fUFJFU0VUUyIsIkhJR0hfUVVBTElUWSIsInF1YWxpdHkiLCJkZXNjcmlwdGlvbiIsIkJBTEFOQ0VEIiwiT1BUSU1JWkVEIiwiQUdHUkVTU0lWRSIsIk1BWElNVU0iLCJjb21wcmVzc0ltYWdlIiwiZmlsZSIsIm9wdGlvbnMiLCJmb3JtYXQiLCJtYXhXaWR0aCIsIm1heEhlaWdodCIsIm1haW50YWluQXNwZWN0UmF0aW8iLCJwcm9ncmVzc0NhbGxiYWNrIiwiY29tcHJlc3Npb25PcHRpb25zIiwibWF4U2l6ZU1CIiwibWF4V2lkdGhPckhlaWdodCIsIk1hdGgiLCJtYXgiLCJ1c2VXZWJXb3JrZXIiLCJmaWxlVHlwZSIsImNvbXByZXNzZWRGaWxlIiwiRmlsZSIsImNoYW5nZUZpbGVFeHRlbnNpb24iLCJuYW1lIiwidHlwZSIsImVycm9yIiwid2FybiIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwiaW1nIiwiSW1hZ2UiLCJjYW52YXMiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJjdHgiLCJnZXRDb250ZXh0Iiwib25sb2FkIiwid2lkdGgiLCJoZWlnaHQiLCJjYWxjdWxhdGVEaW1lbnNpb25zIiwiZHJhd0ltYWdlIiwidG9CbG9iIiwiYmxvYiIsIkVycm9yIiwib25lcnJvciIsInNyYyIsIlVSTCIsImNyZWF0ZU9iamVjdFVSTCIsImNvbXByZXNzSW1hZ2VzIiwiZmlsZXMiLCJyZXN1bHRzIiwidG90YWxGaWxlcyIsImxlbmd0aCIsImkiLCJmaWxlUHJvZ3Jlc3NDYWxsYmFjayIsInByb2dyZXNzIiwib3ZlcmFsbFByb2dyZXNzIiwicHVzaCIsIm9yaWdpbmFsIiwiY29tcHJlc3NlZCIsInJlZHVjdGlvbiIsImNhbGN1bGF0ZVJlZHVjdGlvbiIsInNpemUiLCJzdWNjZXNzIiwibWVzc2FnZSIsImNvbnZlcnRJbWFnZUZvcm1hdCIsInRhcmdldEZvcm1hdCIsIk9iamVjdCIsInZhbHVlcyIsImluY2x1ZGVzIiwicmVzaXplSW1hZ2UiLCJjcmVhdGVUaHVtYm5haWwiLCJvcmlnaW5hbFdpZHRoIiwib3JpZ2luYWxIZWlnaHQiLCJhc3BlY3RSYXRpbyIsIm1pbiIsInJvdW5kIiwiZmlsZW5hbWUiLCJuZXdGb3JtYXQiLCJuYW1lV2l0aG91dEV4dCIsInN1YnN0cmluZyIsImxhc3RJbmRleE9mIiwib3JpZ2luYWxTaXplIiwiY29tcHJlc3NlZFNpemUiLCJ0b0ZpeGVkIiwiZ2V0SW1hZ2VNZXRhZGF0YSIsIm1lZ2FwaXhlbHMiLCJyZXZva2VPYmplY3RVUkwiLCJvcHRpbWl6ZUZvcldlYiIsInRhcmdldFNpemUiLCJwcmVzZXRzIiwic21hbGwiLCJtZWRpdW0iLCJsYXJnZSIsInJldGluYSIsInByZXNldCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./utils/imageUtils.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./utils/pdfUtils.js":
/*!***************************!*\
  !*** ./utils/pdfUtils.js ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addToCombinedPdf: () => (/* binding */ addToCombinedPdf),\n/* harmony export */   analyzeCombinedPdfWithMistral: () => (/* binding */ analyzeCombinedPdfWithMistral),\n/* harmony export */   compressPdf: () => (/* binding */ compressPdf),\n/* harmony export */   debugConfig: () => (/* binding */ debugConfig),\n/* harmony export */   downloadAllFiles: () => (/* binding */ downloadAllFiles),\n/* harmony export */   downloadFile: () => (/* binding */ downloadFile),\n/* harmony export */   formatFileSize: () => (/* binding */ formatFileSize),\n/* harmony export */   getMistralApiKey: () => (/* binding */ getMistralApiKey),\n/* harmony export */   loadAwsConfig: () => (/* binding */ loadAwsConfig),\n/* harmony export */   processLargePdfInChunks: () => (/* binding */ processLargePdfInChunks)\n/* harmony export */ });\n// utils/pdfUtils.js - PDF compression and processing utilities\n// Initialize PDF.js worker\nif ( true && typeof pdfjsLib !== 'undefined') {\n    pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://unpkg.com/pdfjs-dist@3.11.174/build/pdf.worker.min.js';\n}\n// AWS Configuration - Will be populated from server\nlet awsConfig = {\n    region: '',\n    credentials: {\n        accessKeyId: '',\n        secretAccessKey: ''\n    },\n    bucketName: ''\n};\n// Debug configuration\nconst debugConfig = {\n    isDebugMode: false,\n    log: function(message) {\n        for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n            args[_key - 1] = arguments[_key];\n        }\n        if (this.isDebugMode) {\n            console.log(message, ...args);\n        }\n    },\n    warn: function(message) {\n        for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n            args[_key - 1] = arguments[_key];\n        }\n        if (this.isDebugMode) {\n            console.warn(message, ...args);\n        } else {\n            console.warn('[WARNING]', message, ...args);\n        }\n    },\n    error: function(message) {\n        for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n            args[_key - 1] = arguments[_key];\n        }\n        console.error(message, ...args);\n    }\n};\n// Load AWS configuration from server\nasync function loadAwsConfig() {\n    try {\n        debugConfig.log('Loading AWS configuration from server...');\n        const response = await fetch('/api/aws-config');\n        if (!response.ok) {\n            throw new Error(\"Failed to load AWS config: \".concat(response.status, \" \").concat(response.statusText));\n        }\n        const config = await response.json();\n        // Update the AWS config\n        awsConfig.region = config.region;\n        awsConfig.credentials.accessKeyId = config.credentials.accessKeyId;\n        awsConfig.credentials.secretAccessKey = config.credentials.secretAccessKey;\n        awsConfig.bucketName = config.bucketName;\n        debugConfig.log('AWS configuration loaded successfully');\n    } catch (error) {\n        debugConfig.error('Error loading AWS configuration:', error);\n        throw error;\n    }\n}\n// Compress PDF file\nasync function compressPdf(file, quality, dpi, progressCallback) {\n    if ( false || typeof pdfjsLib === 'undefined' || typeof PDFLib === 'undefined') {\n        throw new Error('PDF libraries not loaded');\n    }\n    // Convert quality from percentage (1-100) to decimal (0-1)\n    const imageQuality = quality / 100;\n    // Load the PDF using PDF.js\n    const arrayBuffer = await file.arrayBuffer();\n    const pdf = await pdfjsLib.getDocument({\n        data: arrayBuffer\n    }).promise;\n    const numPages = pdf.numPages;\n    // Create a new PDF with pdf-lib\n    const pdfDoc = await PDFLib.PDFDocument.create();\n    for(let i = 1; i <= numPages; i++){\n        // Update progress\n        progressCallback((i - 1) / numPages * 100);\n        // Get the page\n        const page = await pdf.getPage(i);\n        // Calculate scale based on DPI\n        // PDF.js default is 96 DPI\n        const scale = dpi / 96;\n        const viewport = page.getViewport({\n            scale\n        });\n        // Create a canvas to render the page\n        const canvas = document.createElement('canvas');\n        const context = canvas.getContext('2d');\n        canvas.width = viewport.width;\n        canvas.height = viewport.height;\n        // Render the page to the canvas\n        await page.render({\n            canvasContext: context,\n            viewport\n        }).promise;\n        // Convert the canvas to a JPEG with compression\n        const jpegData = canvas.toDataURL('image/jpeg', imageQuality);\n        // Convert the data URL to a Uint8Array\n        const jpegImage = await fetchImageAsUint8Array(jpegData);\n        // Embed the JPEG into the new PDF\n        const image = await pdfDoc.embedJpg(jpegImage);\n        // Add a page with the same dimensions\n        const newPage = pdfDoc.addPage([\n            viewport.width,\n            viewport.height\n        ]);\n        // Draw the image on the page\n        newPage.drawImage(image, {\n            x: 0,\n            y: 0,\n            width: viewport.width,\n            height: viewport.height\n        });\n    }\n    // Update progress to 100%\n    progressCallback(100);\n    // Save the PDF\n    const pdfBytes = await pdfDoc.save();\n    // Create a new file\n    return new File([\n        pdfBytes\n    ], file.name, {\n        type: 'application/pdf'\n    });\n}\n// Helper function to convert data URL to Uint8Array\nasync function fetchImageAsUint8Array(dataUrl) {\n    // Remove the data URL prefix\n    const base64Data = dataUrl.split(',')[1];\n    // Decode the base64 string to a Uint8Array\n    const binaryString = atob(base64Data);\n    const bytes = new Uint8Array(binaryString.length);\n    for(let i = 0; i < binaryString.length; i++){\n        bytes[i] = binaryString.charCodeAt(i);\n    }\n    return bytes;\n}\n// Add PDF to combined PDF document\nasync function addToCombinedPdf(pdfFile, targetPdfDoc) {\n    if (typeof PDFLib === 'undefined') {\n        throw new Error('PDFLib not loaded');\n    }\n    try {\n        debugConfig.log('Adding file to combined PDF:', pdfFile.name, 'Size:', formatFileSize(pdfFile.size));\n        // Make a fresh copy of the file to ensure the ArrayBuffer isn't shared or detached\n        debugConfig.log('Creating a fresh copy of the file using slice(0)');\n        const copiedFile = pdfFile.slice(0);\n        // Convert the file to an ArrayBuffer\n        const arrayBuffer = await copiedFile.arrayBuffer();\n        debugConfig.log('ArrayBuffer created successfully, byteLength:', arrayBuffer.byteLength);\n        // Load the PDF with PDF-Lib\n        debugConfig.log('Loading PDF from ArrayBuffer with PDFLib...');\n        const sourcePdfDoc = await PDFLib.PDFDocument.load(arrayBuffer);\n        // Copy pages from source document to target document\n        debugConfig.log('Copying pages from source to target...');\n        const pageCount = sourcePdfDoc.getPageCount();\n        const copiedPages = await targetPdfDoc.copyPages(sourcePdfDoc, [\n            ...Array(pageCount).keys()\n        ]);\n        // Add each copied page to the target document\n        for (const page of copiedPages){\n            targetPdfDoc.addPage(page);\n        }\n        debugConfig.log('Successfully copied', copiedPages.length, 'pages');\n        return true;\n    } catch (error) {\n        debugConfig.error('Error adding to combined PDF:', error);\n        throw new Error('Failed to add to combined PDF: ' + error.message);\n    }\n}\n// Format file size for display\nfunction formatFileSize(bytes) {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = [\n        'Bytes',\n        'KB',\n        'MB',\n        'GB'\n    ];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\n// Download file\nfunction downloadFile(file) {\n    let prefix = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 'compressed_';\n    const url = URL.createObjectURL(file);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = \"\".concat(prefix).concat(file.name);\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n}\n// Download multiple files with delay\nfunction downloadAllFiles(files) {\n    if (files.length === 0) return;\n    // For multiple files, we need to trigger downloads sequentially\n    // with a small delay to ensure browser handles them properly\n    files.forEach((file, index)=>{\n        setTimeout(()=>{\n            downloadFile(file);\n        }, index * 500); // 500ms delay between downloads\n    });\n}\n// Get Mistral API key from localStorage\nfunction getMistralApiKey() {\n    if (false) {}\n    return localStorage.getItem('mistralApiKey');\n}\n// Process large PDF in chunks for OCR\nasync function processLargePdfInChunks(pdfFile) {\n    debugConfig.log('Processing large PDF in chunks:', pdfFile.name);\n    try {\n        // Load the PDF using PDF.js to get page count\n        const tempPdfBytes = await pdfFile.slice(0).arrayBuffer();\n        const pdf = await pdfjsLib.getDocument({\n            data: tempPdfBytes\n        }).promise;\n        const numPages = pdf.numPages;\n        debugConfig.log(\"PDF has \".concat(numPages, \" pages, will process in chunks\"));\n        // Create chunks of pages - smaller chunks for very large PDFs\n        const pdfSizeInMB = pdfFile.size / (1024 * 1024);\n        // Adjust chunk size based on PDF size\n        let CHUNK_SIZE = 5; // default\n        if (pdfSizeInMB > 30) {\n            CHUNK_SIZE = 2; // Very large PDFs get tiny chunks\n        } else if (pdfSizeInMB > 20) {\n            CHUNK_SIZE = 3; // Larger PDFs get smaller chunks\n        } else if (pdfSizeInMB > 10) {\n            CHUNK_SIZE = 4; // Medium PDFs get medium chunks\n        }\n        debugConfig.log(\"Using chunk size of \".concat(CHUNK_SIZE, \" pages based on PDF size (\").concat(pdfSizeInMB.toFixed(2), \" MB)\"));\n        const chunks = [];\n        for(let i = 1; i <= numPages; i += CHUNK_SIZE){\n            const endPage = Math.min(i + CHUNK_SIZE - 1, numPages);\n            chunks.push({\n                startPage: i,\n                endPage: endPage\n            });\n        }\n        debugConfig.log(\"Split PDF into \".concat(chunks.length, \" chunks for processing\"));\n        // Process each chunk and collect results\n        const allResults = [];\n        let failedChunks = 0;\n        for(let chunkIndex = 0; chunkIndex < chunks.length; chunkIndex++){\n            const chunk = chunks[chunkIndex];\n            debugConfig.log(\"Processing chunk \".concat(chunkIndex + 1, \"/\").concat(chunks.length, \" (pages \").concat(chunk.startPage, \"-\").concat(chunk.endPage, \")\"));\n            try {\n                // Create a new PDF with just the pages from this chunk\n                const chunkPdfDoc = await PDFLib.PDFDocument.create();\n                // Create a fresh copy of the file for each chunk\n                const sourcePdfBytes = await pdfFile.slice(0).arrayBuffer();\n                const sourcePdfDoc = await PDFLib.PDFDocument.load(sourcePdfBytes);\n                // Copy pages from source to chunk\n                const pageIndices = [];\n                for(let i = chunk.startPage - 1; i < chunk.endPage; i++){\n                    pageIndices.push(i);\n                }\n                const copiedPages = await chunkPdfDoc.copyPages(sourcePdfDoc, pageIndices);\n                copiedPages.forEach((page)=>chunkPdfDoc.addPage(page));\n                // Save the chunk PDF\n                const chunkPdfBytes = await chunkPdfDoc.save();\n                const chunkPdfFile = new File([\n                    chunkPdfBytes\n                ], \"chunk_\".concat(chunkIndex + 1, \"_\").concat(pdfFile.name), {\n                    type: 'application/pdf'\n                });\n                // Process this chunk with OCR\n                debugConfig.log(\"Sending chunk \".concat(chunkIndex + 1, \" to OCR service (\").concat(formatFileSize(chunkPdfFile.size), \")\"));\n                const chunkResult = await analyzeCombinedPdfWithMistral(chunkPdfFile);\n                if (chunkResult) {\n                    allResults.push(chunkResult);\n                    debugConfig.log(\"Successfully processed chunk \".concat(chunkIndex + 1));\n                } else {\n                    debugConfig.warn(\"Failed to process chunk \".concat(chunkIndex + 1, \" - no results returned\"));\n                    failedChunks++;\n                }\n            } catch (chunkError) {\n                debugConfig.error(\"Error processing chunk \".concat(chunkIndex + 1, \":\"), chunkError);\n                failedChunks++;\n                // Check if too many chunks are failing\n                if (failedChunks > 2 && failedChunks / (chunkIndex + 1) > 0.5) {\n                    debugConfig.error('Too many chunks failing, aborting chunked processing');\n                    throw new Error('Multiple chunk processing failures - OCR may not be working properly');\n                }\n            }\n            // Add a delay between chunks to avoid rate limiting\n            const delayTime = 2000 + Math.random() * 1000; // 2-3 seconds\n            debugConfig.log(\"Waiting \".concat(Math.round(delayTime / 1000), \" seconds before processing next chunk...\"));\n            await new Promise((resolve)=>setTimeout(resolve, delayTime));\n        }\n        // Combine all results - require at least one successful chunk\n        if (allResults.length === 0) {\n            throw new Error('Failed to process any chunks of the PDF');\n        }\n        // Merge metadata from all chunks\n        const combinedMetadata = {\n            pageCount: numPages,\n            totalWords: allResults.reduce((sum, result)=>sum + (result.totalWords || 0), 0),\n            language: allResults[0].language,\n            hasImages: allResults.some((result)=>result.hasImages),\n            extractedText: allResults.map((result)=>result.extractedText || '').join('\\n\\n'),\n            fullText: allResults.map((result)=>result.fullText || '').join('\\n\\n'),\n            images: []\n        };\n        // Combine all images from all chunks, updating page indices\n        allResults.forEach((result, chunkIndex)=>{\n            if (result.images && result.images.length > 0) {\n                const chunkStartPage = chunks[chunkIndex].startPage;\n                result.images.forEach((image)=>{\n                    // Update the page index to reflect the position in the full document\n                    const adjustedImage = {\n                        ...image\n                    };\n                    adjustedImage.pageIndex = chunkStartPage - 1 + image.pageIndex;\n                    combinedMetadata.images.push(adjustedImage);\n                });\n            }\n        });\n        debugConfig.log(\"Successfully processed all chunks, combined \".concat(combinedMetadata.images.length, \" images\"));\n        return combinedMetadata;\n    } catch (error) {\n        debugConfig.error('Error processing large PDF in chunks:', error);\n        throw error;\n    }\n}\n// Analyze combined PDF with Mistral OCR API (placeholder - needs full implementation)\nasync function analyzeCombinedPdfWithMistral(pdfFile) {\n    // This is a simplified version - the full implementation would include\n    // S3 upload, Mistral API calls, etc.\n    debugConfig.log('OCR analysis would be implemented here for:', pdfFile.name);\n    // Return mock metadata for now\n    return {\n        pageCount: 1,\n        totalWords: 100,\n        language: 'en',\n        hasImages: false,\n        extractedText: 'Sample extracted text...',\n        fullText: 'Sample full text...',\n        images: []\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./utils/pdfUtils.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./utils/textUtils.js":
/*!****************************!*\
  !*** ./utils/textUtils.js ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   COMPRESSION_METHODS: () => (/* binding */ COMPRESSION_METHODS),\n/* harmony export */   TEXT_FORMATS: () => (/* binding */ TEXT_FORMATS),\n/* harmony export */   compressText: () => (/* binding */ compressText),\n/* harmony export */   compressTextFiles: () => (/* binding */ compressTextFiles),\n/* harmony export */   getTextMetadata: () => (/* binding */ getTextMetadata)\n/* harmony export */ });\n/* harmony import */ var _pdfUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pdfUtils */ \"(pages-dir-browser)/./utils/pdfUtils.js\");\n// Text file compression and optimization utilities\n\n// Dynamic import for pako (client-side only)\nlet pako = null;\nif (true) {\n    __webpack_require__.e(/*! import() */ \"_pages-dir-browser_node_modules_pako_dist_pako_esm_mjs\").then(__webpack_require__.bind(__webpack_require__, /*! pako */ \"(pages-dir-browser)/./node_modules/pako/dist/pako.esm.mjs\")).then((module)=>{\n        pako = module;\n    });\n}\nconst TEXT_FORMATS = {\n    PLAIN: 'txt',\n    MARKDOWN: 'md',\n    JSON: 'json',\n    XML: 'xml',\n    CSV: 'csv',\n    RTF: 'rtf'\n};\nconst COMPRESSION_METHODS = {\n    GZIP: 'gzip',\n    MINIFY: 'minify',\n    OPTIMIZE: 'optimize'\n};\n// Compress text file using various methods\nasync function compressText(file) {\n    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    const { method = COMPRESSION_METHODS.OPTIMIZE, removeComments = true, removeExtraWhitespace = true, removeEmptyLines = true, optimizeJson = true, progressCallback = ()=>{} } = options;\n    try {\n        progressCallback(10);\n        // Read file content\n        const content = await readFileAsText(file);\n        progressCallback(30);\n        let compressedContent = content;\n        // Apply compression based on file type and method\n        const fileType = detectTextFileType(file);\n        progressCallback(50);\n        switch(method){\n            case COMPRESSION_METHODS.MINIFY:\n                compressedContent = await minifyText(content, fileType, {\n                    removeComments,\n                    removeExtraWhitespace,\n                    removeEmptyLines\n                });\n                break;\n            case COMPRESSION_METHODS.OPTIMIZE:\n                compressedContent = await optimizeText(content, fileType, {\n                    removeComments,\n                    removeExtraWhitespace,\n                    removeEmptyLines,\n                    optimizeJson\n                });\n                break;\n            case COMPRESSION_METHODS.GZIP:\n                if (pako) {\n                    try {\n                        // Use pako for GZIP compression\n                        const uint8Array = new TextEncoder().encode(content);\n                        const compressed = pako.gzip(uint8Array);\n                        // Create a new file with .gz extension\n                        const blob = new Blob([\n                            compressed\n                        ], {\n                            type: 'application/gzip'\n                        });\n                        const gzFileName = file.name + '.gz';\n                        const compressedFile = new File([\n                            blob\n                        ], gzFileName, {\n                            type: 'application/gzip'\n                        });\n                        progressCallback(100);\n                        return compressedFile;\n                    } catch (error) {\n                        _pdfUtils__WEBPACK_IMPORTED_MODULE_0__.debugConfig.warn('GZIP compression failed, falling back to optimization:', error);\n                        compressedContent = await optimizeText(content, fileType, options);\n                    }\n                } else {\n                    _pdfUtils__WEBPACK_IMPORTED_MODULE_0__.debugConfig.warn('Pako not available, falling back to optimization');\n                    compressedContent = await optimizeText(content, fileType, options);\n                }\n                break;\n        }\n        progressCallback(80);\n        // Create compressed file\n        const blob = new Blob([\n            compressedContent\n        ], {\n            type: file.type\n        });\n        const compressedFile = new File([\n            blob\n        ], file.name, {\n            type: file.type\n        });\n        progressCallback(100);\n        return compressedFile;\n    } catch (error) {\n        _pdfUtils__WEBPACK_IMPORTED_MODULE_0__.debugConfig.error('Error compressing text file:', error);\n        throw error;\n    }\n}\n// Minify text content\nasync function minifyText(content, fileType, options) {\n    let minified = content;\n    switch(fileType){\n        case TEXT_FORMATS.JSON:\n            minified = minifyJson(content);\n            break;\n        case TEXT_FORMATS.XML:\n            minified = minifyXml(content, options);\n            break;\n        case TEXT_FORMATS.CSV:\n            minified = minifyCsv(content, options);\n            break;\n        default:\n            minified = minifyPlainText(content, options);\n            break;\n    }\n    return minified;\n}\n// Optimize text content\nasync function optimizeText(content, fileType, options) {\n    let optimized = content;\n    // Apply common optimizations\n    if (options.removeExtraWhitespace) {\n        optimized = optimized.replace(/[ \\t]+/g, ' '); // Multiple spaces/tabs to single space\n        optimized = optimized.replace(/[ \\t]+$/gm, ''); // Trailing whitespace\n    }\n    if (options.removeEmptyLines) {\n        optimized = optimized.replace(/\\n\\s*\\n\\s*\\n/g, '\\n\\n'); // Multiple empty lines to double\n    }\n    // File-type specific optimizations\n    switch(fileType){\n        case TEXT_FORMATS.JSON:\n            if (options.optimizeJson) {\n                optimized = optimizeJson(optimized);\n            }\n            break;\n        case TEXT_FORMATS.XML:\n            optimized = optimizeXml(optimized, options);\n            break;\n        case TEXT_FORMATS.MARKDOWN:\n            optimized = optimizeMarkdown(optimized, options);\n            break;\n    }\n    return optimized;\n}\n// JSON-specific functions\nfunction minifyJson(content) {\n    try {\n        const parsed = JSON.parse(content);\n        return JSON.stringify(parsed);\n    } catch (error) {\n        _pdfUtils__WEBPACK_IMPORTED_MODULE_0__.debugConfig.warn('Invalid JSON, returning original content');\n        return content;\n    }\n}\nfunction optimizeJson(content) {\n    try {\n        const parsed = JSON.parse(content);\n        // Pretty print with 2 spaces (good balance between readability and size)\n        return JSON.stringify(parsed, null, 2);\n    } catch (error) {\n        _pdfUtils__WEBPACK_IMPORTED_MODULE_0__.debugConfig.warn('Invalid JSON, returning original content');\n        return content;\n    }\n}\n// XML-specific functions\nfunction minifyXml(content, options) {\n    let minified = content;\n    // Remove comments\n    if (options.removeComments) {\n        minified = minified.replace(/<!--[\\s\\S]*?-->/g, '');\n    }\n    // Remove extra whitespace between tags\n    minified = minified.replace(/>\\s+</g, '><');\n    // Remove leading/trailing whitespace\n    minified = minified.trim();\n    return minified;\n}\nfunction optimizeXml(content, options) {\n    let optimized = content;\n    // Remove comments if requested\n    if (options.removeComments) {\n        optimized = optimized.replace(/<!--[\\s\\S]*?-->/g, '');\n    }\n    // Normalize whitespace between tags\n    optimized = optimized.replace(/>\\s+</g, '>\\n<');\n    return optimized;\n}\n// CSV-specific functions\nfunction minifyCsv(content, options) {\n    const lines = content.split('\\n');\n    // Remove empty lines\n    const filteredLines = options.removeEmptyLines ? lines.filter((line)=>line.trim() !== '') : lines;\n    // Remove extra spaces around commas\n    const cleanedLines = filteredLines.map((line)=>line.replace(/\\s*,\\s*/g, ',').trim());\n    return cleanedLines.join('\\n');\n}\n// Markdown-specific functions\nfunction optimizeMarkdown(content, options) {\n    let optimized = content;\n    // Remove comments (HTML comments in markdown)\n    if (options.removeComments) {\n        optimized = optimized.replace(/<!--[\\s\\S]*?-->/g, '');\n    }\n    // Normalize heading spacing\n    optimized = optimized.replace(/^(#{1,6})\\s*(.+)$/gm, '$1 $2');\n    // Normalize list spacing\n    optimized = optimized.replace(/^(\\s*[*+-])\\s+/gm, '$1 ');\n    return optimized;\n}\n// Plain text optimization\nfunction minifyPlainText(content, options) {\n    let minified = content;\n    if (options.removeExtraWhitespace) {\n        minified = minified.replace(/[ \\t]+/g, ' ');\n        minified = minified.replace(/[ \\t]+$/gm, '');\n    }\n    if (options.removeEmptyLines) {\n        minified = minified.replace(/\\n\\s*\\n\\s*\\n/g, '\\n\\n');\n    }\n    return minified.trim();\n}\n// Batch compress text files\nasync function compressTextFiles(files) {\n    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, progressCallback = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : ()=>{};\n    const results = [];\n    const totalFiles = files.length;\n    for(let i = 0; i < totalFiles; i++){\n        const file = files[i];\n        try {\n            const fileProgressCallback = (progress)=>{\n                const overallProgress = (i / totalFiles + progress / 100 / totalFiles) * 100;\n                progressCallback(overallProgress, i, file.name);\n            };\n            const compressedFile = await compressText(file, {\n                ...options,\n                progressCallback: fileProgressCallback\n            });\n            results.push({\n                original: file,\n                compressed: compressedFile,\n                reduction: calculateReduction(file.size, compressedFile.size),\n                success: true\n            });\n        } catch (error) {\n            _pdfUtils__WEBPACK_IMPORTED_MODULE_0__.debugConfig.error(\"Failed to compress \".concat(file.name, \":\"), error);\n            results.push({\n                original: file,\n                compressed: null,\n                error: error.message,\n                success: false\n            });\n        }\n    }\n    return results;\n}\n// Helper functions\nfunction detectTextFileType(file) {\n    const extension = file.name.split('.').pop().toLowerCase();\n    switch(extension){\n        case 'json':\n            return TEXT_FORMATS.JSON;\n        case 'xml':\n            return TEXT_FORMATS.XML;\n        case 'csv':\n            return TEXT_FORMATS.CSV;\n        case 'md':\n        case 'markdown':\n            return TEXT_FORMATS.MARKDOWN;\n        case 'rtf':\n            return TEXT_FORMATS.RTF;\n        default:\n            return TEXT_FORMATS.PLAIN;\n    }\n}\nfunction readFileAsText(file) {\n    return new Promise((resolve, reject)=>{\n        const reader = new FileReader();\n        reader.onload = (e)=>{\n            resolve(e.target.result);\n        };\n        reader.onerror = ()=>{\n            reject(new Error('Failed to read file'));\n        };\n        reader.readAsText(file);\n    });\n}\nfunction calculateReduction(originalSize, compressedSize) {\n    return ((originalSize - compressedSize) / originalSize * 100).toFixed(2);\n}\n// Get text file metadata\nasync function getTextMetadata(file) {\n    try {\n        const content = await readFileAsText(file);\n        const lines = content.split('\\n');\n        const words = content.split(/\\s+/).filter((word)=>word.length > 0);\n        const characters = content.length;\n        const charactersNoSpaces = content.replace(/\\s/g, '').length;\n        return {\n            filename: file.name,\n            size: (0,_pdfUtils__WEBPACK_IMPORTED_MODULE_0__.formatFileSize)(file.size),\n            type: detectTextFileType(file),\n            lines: lines.length,\n            words: words.length,\n            characters: characters,\n            charactersNoSpaces: charactersNoSpaces,\n            averageWordsPerLine: (words.length / lines.length).toFixed(2),\n            encoding: 'UTF-8' // Assumption for web files\n        };\n    } catch (error) {\n        _pdfUtils__WEBPACK_IMPORTED_MODULE_0__.debugConfig.error('Error getting text metadata:', error);\n        throw error;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./utils/textUtils.js\n"));

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["pages/_app","main"], () => (__webpack_exec__("(pages-dir-browser)/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2FUsers%2Fbrianchew%2Fdev%2Fcompress%2Fpages%2Findex.js&page=%2F!")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);